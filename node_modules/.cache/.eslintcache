[{"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/chromeServices/DOMEvaluator.ts":"1","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/index.tsx":"2","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/reportWebVitals.ts":"3","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/App.tsx":"4","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/utils/theme.ts":"5","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Typography/Typography.tsx":"6","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/index.tsx":"7","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Search/index.tsx":"8","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/index.tsx":"9","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/Layout.tsx":"10","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/WordBlock.tsx":"11","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Search/Search.tsx":"12","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/Header.tsx":"13","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/Main.tsx":"14","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/Header.tsx":"15","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/hooks/useAxios.ts":"16","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Space/Space.tsx":"17","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Button/Button.tsx":"18","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/index.tsx":"19","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/index.tsx":"20","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/services/cambParser/index.ts":"21","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/Logo.tsx":"22","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/Titles.tsx":"23","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/Word.tsx":"24","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/DefinitionBlock.tsx":"25","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/Input.tsx":"26","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/services/cambParser/searchWord.ts":"27","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/Pronounce.tsx":"28","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Label/index.tsx":"29","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/Label.tsx":"30","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/Definition/Definition.tsx":"31","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/Example/index.tsx":"32","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Label/Label.tsx":"33","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/Example/Example.tsx":"34","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Tab/index.tsx":"35","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Tab/Tab.tsx":"36","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Tab/Body.tsx":"37","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/utils/tabs.tsx":"38","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Tab/Group.tsx":"39","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/currentTab.ts":"40","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/searchError.ts":"41","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/wordData.ts":"42","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/isSearching.ts":"43","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/searchingWord.ts":"44","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/TextArea.tsx":"45","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/ContentEditable/index.tsx":"46","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/ContentEditable/ContentEditable.tsx":"47","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/utils/helpers/getCaretPosition.js":"48","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/utils/helpers/setCaretPosition.js":"49","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AboutPage/index.tsx":"50","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AddPage/index.tsx":"51","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/SearchPage/index.tsx":"52","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/SettingsPage/index.tsx":"53","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AddPage/AddPage.tsx":"54","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AboutPage/AboutPage.tsx":"55","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/SearchPage/SearchPage.tsx":"56","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/SettingsPage/SettingsPage.tsx":"57","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Audio/index.tsx":"58","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Audio/Audio.tsx":"59","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Select/index.tsx":"60","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Select/Select.tsx":"61","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Select/Option.tsx":"62","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Checkbox/index.tsx":"63","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Checkbox/Checkbox.tsx":"64","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/ankiFields.ts":"65"},{"size":798,"mtime":1666183345588,"results":"66","hashOfConfig":"67"},{"size":612,"mtime":1666361712470,"results":"68","hashOfConfig":"67"},{"size":425,"mtime":1666183345597,"results":"69","hashOfConfig":"67"},{"size":4291,"mtime":1667818447680,"results":"70","hashOfConfig":"67"},{"size":391,"mtime":1666275176068,"results":"71","hashOfConfig":"67"},{"size":1010,"mtime":1666183345592,"results":"72","hashOfConfig":"67"},{"size":45,"mtime":1666183345590,"results":"73","hashOfConfig":"67"},{"size":45,"mtime":1666183345590,"results":"74","hashOfConfig":"67"},{"size":51,"mtime":1666183345595,"results":"75","hashOfConfig":"67"},{"size":904,"mtime":1666183345589,"results":"76","hashOfConfig":"67"},{"size":733,"mtime":1666183345595,"results":"77","hashOfConfig":"67"},{"size":3601,"mtime":1666639125608,"results":"78","hashOfConfig":"67"},{"size":2754,"mtime":1666639727655,"results":"79","hashOfConfig":"67"},{"size":1227,"mtime":1666639090189,"results":"80","hashOfConfig":"67"},{"size":542,"mtime":1666183345594,"results":"81","hashOfConfig":"67"},{"size":1206,"mtime":1666183345597,"results":"82","hashOfConfig":"67"},{"size":469,"mtime":1666183345592,"results":"83","hashOfConfig":"67"},{"size":2170,"mtime":1667588288519,"results":"84","hashOfConfig":"67"},{"size":43,"mtime":1666183345592,"results":"85","hashOfConfig":"67"},{"size":63,"mtime":1666183345594,"results":"86","hashOfConfig":"67"},{"size":168,"mtime":1666183345598,"results":"87","hashOfConfig":"67"},{"size":1670,"mtime":1666639149957,"results":"88","hashOfConfig":"67"},{"size":688,"mtime":1666183345590,"results":"89","hashOfConfig":"67"},{"size":1511,"mtime":1667589737450,"results":"90","hashOfConfig":"67"},{"size":3446,"mtime":1667811411651,"results":"91","hashOfConfig":"67"},{"size":2738,"mtime":1667747021327,"results":"92","hashOfConfig":"67"},{"size":381,"mtime":1666183345598,"results":"93","hashOfConfig":"67"},{"size":1339,"mtime":1667589078441,"results":"94","hashOfConfig":"67"},{"size":43,"mtime":1666183345592,"results":"95","hashOfConfig":"67"},{"size":970,"mtime":1666264990702,"results":"96","hashOfConfig":"67"},{"size":727,"mtime":1667779359360,"results":"97","hashOfConfig":"67"},{"size":47,"mtime":1666183345593,"results":"98","hashOfConfig":"67"},{"size":1515,"mtime":1666183345592,"results":"99","hashOfConfig":"67"},{"size":2097,"mtime":1667777717485,"results":"100","hashOfConfig":"67"},{"size":39,"mtime":1666254255269,"results":"101","hashOfConfig":"67"},{"size":1579,"mtime":1666638241441,"results":"102","hashOfConfig":"67"},{"size":596,"mtime":1666259282063,"results":"103","hashOfConfig":"67"},{"size":669,"mtime":1667587557881,"results":"104","hashOfConfig":"67"},{"size":635,"mtime":1666330813951,"results":"105","hashOfConfig":"67"},{"size":551,"mtime":1666639689072,"results":"106","hashOfConfig":"67"},{"size":135,"mtime":1666183345599,"results":"107","hashOfConfig":"67"},{"size":179,"mtime":1666183345599,"results":"108","hashOfConfig":"67"},{"size":122,"mtime":1666183345598,"results":"109","hashOfConfig":"67"},{"size":121,"mtime":1666183345599,"results":"110","hashOfConfig":"67"},{"size":1757,"mtime":1667584652063,"results":"111","hashOfConfig":"67"},{"size":63,"mtime":1666789140323,"results":"112","hashOfConfig":"67"},{"size":4506,"mtime":1667582655738,"results":"113","hashOfConfig":"67"},{"size":1522,"mtime":1667556005140,"results":"114","hashOfConfig":"67"},{"size":574,"mtime":1667582019254,"results":"115","hashOfConfig":"67"},{"size":51,"mtime":1666262986058,"results":"116","hashOfConfig":"67"},{"size":47,"mtime":1666262816551,"results":"117","hashOfConfig":"67"},{"size":53,"mtime":1666255637010,"results":"118","hashOfConfig":"67"},{"size":57,"mtime":1666263030714,"results":"119","hashOfConfig":"67"},{"size":2852,"mtime":1667818384091,"results":"120","hashOfConfig":"67"},{"size":163,"mtime":1666262971085,"results":"121","hashOfConfig":"67"},{"size":1820,"mtime":1667779797733,"results":"122","hashOfConfig":"67"},{"size":175,"mtime":1666263012487,"results":"123","hashOfConfig":"67"},{"size":43,"mtime":1667587643038,"results":"124","hashOfConfig":"67"},{"size":620,"mtime":1667589406703,"results":"125","hashOfConfig":"67"},{"size":45,"mtime":1667744383775,"results":"126","hashOfConfig":"67"},{"size":2506,"mtime":1667757384779,"results":"127","hashOfConfig":"67"},{"size":1124,"mtime":1667780907822,"results":"128","hashOfConfig":"67"},{"size":49,"mtime":1667764295833,"results":"129","hashOfConfig":"67"},{"size":1255,"mtime":1667766525067,"results":"130","hashOfConfig":"67"},{"size":586,"mtime":1667818200251,"results":"131","hashOfConfig":"67"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3i52mo",{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"138"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"138"},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"138"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"138"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"138"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"184","messages":"185","suppressedMessages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"138"},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"203","messages":"204","suppressedMessages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"138"},{"filePath":"207","messages":"208","suppressedMessages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"223","messages":"224","suppressedMessages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"229","messages":"230","suppressedMessages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","suppressedMessages":"237","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"138"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245"},{"filePath":"246","messages":"247","suppressedMessages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"249","messages":"250","suppressedMessages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"138"},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"268","messages":"269","suppressedMessages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"274","messages":"275","suppressedMessages":"276","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"277","messages":"278","suppressedMessages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280"},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"138"},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287"},{"filePath":"288","messages":"289","suppressedMessages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291"},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"295","messages":"296","suppressedMessages":"297","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"298","messages":"299","suppressedMessages":"300","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"301","messages":"302","suppressedMessages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","suppressedMessages":"306","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"307","messages":"308","suppressedMessages":"309","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"310"},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317"},{"filePath":"318","messages":"319","suppressedMessages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"321","messages":"322","suppressedMessages":"323","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"324","messages":"325","suppressedMessages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"327","messages":"328","suppressedMessages":"329","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"330","messages":"331","suppressedMessages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"333"},{"filePath":"334","messages":"335","suppressedMessages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"337","messages":"338","suppressedMessages":"339","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"340","messages":"341","suppressedMessages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"343","messages":"344","suppressedMessages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/chromeServices/DOMEvaluator.ts",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/index.tsx",[],[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/reportWebVitals.ts",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/App.tsx",["346","347","348","349","350","351","352","353","354","355","356","357","358","359","360","361","362","363","364","365"],[],"import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport { DOMMessage, DOMMessageResponse } from './types';\nimport { Layout } from 'components/Layout';\nimport { Global } from '@emotion/react';\nimport { theme } from 'utils/theme';\nimport { Input } from 'components/UI/Input';\nimport Button from 'components/UI/Button/Button';\nimport Space from 'components/UI/Space/Space';\nimport { WordBlock } from 'components/WordBlock';\nimport { Search } from 'components/Search';\nimport { useRecoilState } from 'recoil';\nimport { searchingWordState } from 'store/searchingWord';\nimport { wordDataState } from 'store/wordData';\nimport { searchErrorState } from 'store/searchError';\nimport Typography from 'components/UI/Typography/Typography';\nimport { Tab } from 'components/Tab';\nimport { ALL_TABS } from 'utils/tabs';\nimport { currentTabSelector, CURRENT_TAB } from 'store/currentTab';\nimport { ankiFieldsSelector, ANKI_FIELDS } from 'store/ankiFields';\n\nfunction App() {\n  const [title, setTitle] = useState('');\n  const [headlines, setHeadlines] = useState<string[]>([]);\n  const [currentTab, setCurrnetTab] = useRecoilState(currentTabSelector);\n  const [ ankiFields, setAnkiFields ] = useRecoilState(ankiFieldsSelector);\n\n  useEffect(() => {\n    if (chrome.storage) {\n      chrome.storage.sync.get([CURRENT_TAB, ANKI_FIELDS], (res) => {\n        // setCurrnetTab(res[CURRENT_TAB]);\n        console.log(JSON.parse(res[ANKI_FIELDS]));\n        setAnkiFields(JSON.parse(res[ANKI_FIELDS]));\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (ankiFields.length === 0) {\n      setAnkiFields([\n        {name: 'Word', value: undefined},\n        {name: 'Meaning', value: undefined},\n        {name: 'Example', value: undefined},\n      ])\n    }\n  }, [])\n\n  // React.useEffect(() => {\n  //   /**\n  //    * We can't use \"chrome.runtime.sendMessage\" for sending messages from React.\n  //    * For sending messages from React we need to specify which tab to send it to.\n  //    */\n  //   chrome.tabs && chrome.tabs.query({\n  //     active: true,\n  //     currentWindow: true\n  //   }, tabs => {\n  //     /**\n  //      * Sends a single message to the content script(s) in the specified tab,\n  //      * with an optional callback to run when a response is sent back.\n  //      *\n  //      * The runtime.onMessage event is fired in each content script running\n  //      * in the specified tab for the current extension.\n  //      */\n  //     chrome.tabs.sendMessage(\n  //       tabs[0].id || 0,\n  //       { type: 'GET_DOM' } as DOMMessage,\n  //       (response: DOMMessageResponse) => {\n  //         setTitle(response.title);\n  //         setHeadlines(response.headlines);\n  //       });\n  //   });\n  // });\n\n  return (\n    <Layout>\n      <Global styles={{\n        '@font-face': {\n          fontFamily: \"Mako\",\n          src: 'local(\"Mako\"), url(./fonts/Mako/Mako-Regular.ttf) format(\"truetype\")',\n        },        \n        '*': {\n          fontFamily: '\"Moka\", sans-serif',\n          boxSizing: 'border-box',\n          color: theme.palette.primary.darkest,\n          fontWeight: 700,\n        },\n        'html, body': {\n          width: '400px',\n          margin: 0,\n          padding: 0,\n        },\n        '#root': {\n          height: '100%',\n        },\n        '*::-webkit-scrollbar': {\n          width: '7px',\n        },\n        '*::-webkit-scrollbar-track': {\n          borderRadius: '0px',\n          backgroundColor: theme.palette.secondary.darker,\n        },\n        '*::-webkit-scrollbar-track:hover': {\n          backgroundColor: theme.palette.secondary.darker,\n        },\n        '*::-webkit-scrollbar-track:active': {\n          backgroundColor: theme.palette.secondary.darker,\n        },\n        '*::-webkit-scrollbar-thumb': {\n          borderRadius: '20px',\n          backgroundColor: theme.palette.primary.normal,\n        },\n        '*::-webkit-scrollbar-thumb:hover': {\n          backgroundColor: theme.palette.primary.darker,\n        },\n        '*::-webkit-scrollbar-thumb:active': {\n          backgroundColor: theme.palette.primary.darkest,\n        }\n      }} />\n      {ALL_TABS.map((tab) => (\n        <Tab.Body tabId={tab.tabId} currentTab={currentTab} >\n          {tab.page}\n        </Tab.Body>\n      ))}\n    </Layout>\n  );\n}\n\nexport default App;\n","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/utils/theme.ts",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Typography/Typography.tsx",["366","367"],[],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FC } from 'react';\n\ntype TypographyType = 'text' | 'h1' | 'h2';\n\ninterface ITypographyProps extends React.HTMLAttributes<HTMLElement> {\n  type?: TypographyType,\n  css?: {},\n};\n\nconst styles = {\n  'text': css({\n    margin: '10px 0',\n    fontWeight: 700,\n    fontSize: '16px'\n  }),\n  'h1': css({\n    fontWeight: 700,\n    fontSize: '32px',\n    margin: '0',\n    marginTop: '20px',\n  }),\n  'h2': css({\n\n  })\n}\n\nconst Typography: FC<ITypographyProps> = ({ type = 'text', css, ...other }) => {\n  \n  let RenderNode: FC<ITypographyProps>;\n  \n  switch (type) {\n    case 'h1':\n      RenderNode = (props) => <h1 {...props} />\n      break;\n    case 'h2': \n      RenderNode = (props) => <h1 {...props} />\n      break;\n    default:\n      RenderNode = (props) => <p {...props} />\n      break;\n  }\n\n  return (\n    <RenderNode\n      css={[\n        styles[type],\n        css\n      ]} \n      {...other}\n    />\n  )\n};\n\nexport default Typography;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Search/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/Layout.tsx",["368","369","370"],[],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FC, MutableRefObject, useRef, useState } from 'react';\nimport { theme } from 'utils/theme';\nimport Header from './Header';\nimport Main from './Main';\n\ninterface ILayoutProps extends React.HTMLAttributes<HTMLDivElement> {\n\n};\n\nconst styles = {\n  base: css({\n    height: '100%',\n  })\n}\n\nconst Layout: FC<ILayoutProps> = ({ children, ...other }) => {\n  const headerRef = useRef(null);\n  const [scrollTop, setScrollTop] = useState<number>(0);\n\n  const scrollHandler = () => {\n    const main = document.querySelector<HTMLDivElement>('main');\n    if (main) {\n      setScrollTop(main.scrollTop);\n    }\n  }\n\n  return (\n    <div\n      css={styles.base}\n      {...other}\n    >\n      <Header scrollTop={scrollTop} />\n      <Main onScroll={scrollHandler}>\n        {children}\n      </Main>\n    </div>\n  )\n};\n\nexport default Layout;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/WordBlock.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Search/Search.tsx",["371","372","373","374","375","376"],[],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Button from 'components/UI/Button/Button';\nimport { Input } from 'components/UI/Input';\nimport Space from 'components/UI/Space/Space';\nimport { useAxios } from 'hooks/useAxios';\nimport { WordType } from 'models/WordType';\nimport React, { FC, useEffect, useLayoutEffect, useState } from 'react';\nimport { PulseLoader } from 'react-spinners';\nimport { useRecoilState } from 'recoil';\nimport { searchWord } from 'services/cambParser';\nimport { SearchWordType } from 'services/cambParser/searchWord';\nimport { isSearchingState } from 'store/isSearching';\nimport { searchErrorState } from 'store/searchError';\nimport { searchingWordState } from 'store/searchingWord';\nimport { wordDataState } from 'store/wordData';\nimport { theme } from 'utils/theme';\n\ninterface ISearchProps extends React.HTMLAttributes<HTMLElement> {\n  small?: boolean;\n};\n\nconst styles = {\n  root: {\n    base: css({\n      position: 'relative',\n    })\n  },\n  input: {\n    base: ({ buttonWidth }: {buttonWidth: number}) => css({\n      flexGrow: 1,\n      '> input': {\n        paddingRight: buttonWidth + 15,\n      }\n    })\n  },\n  button: {\n    base: css({\n      position: 'absolute',\n      zIndex: 2,\n      right: 0,\n      // borderRadius: '0 12px 12px 0',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    })\n  }\n}\n\nconst Search: FC<ISearchProps> = ({ small = false, ...other }) => {\n  const [buttonWidth, setButtonWidth] = useState(0);\n  const [searchWordRequest, { data, loading, error }] = useAxios<SearchWordType, WordType[]>(searchWord);\n  const [searchingWord, setSearchingWord] = useRecoilState(searchingWordState);\n  const [wordData, setWordData] = useRecoilState(wordDataState);\n  const [isSearching, setIsSearching] = useRecoilState(isSearchingState);\n  const [searchError, setSearchError] = useRecoilState(searchErrorState);\n\n  useLayoutEffect(() => {\n    const searchButton = document.querySelector<HTMLButtonElement>('.search-button');\n    \n    if (searchButton) {\n      setButtonWidth(Number(searchButton.offsetWidth));\n    }\n\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      setSearchError(undefined);\n      setWordData(data);\n      const main = document.querySelector('main');\n      main?.scrollTo(0,0);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setIsSearching(loading);\n  }, [loading])\n\n  useEffect(() => {\n    if (error) {\n      setWordData(undefined);\n      setSearchError(error);\n    }\n  }, [error])\n\n  const searchHandler = () => {\n    if (searchingWord !== '') {\n      const res = searchWordRequest({word: searchingWord});\n    }\n  }\n\n  const inputHandler = (e: React.FormEvent<HTMLInputElement>) => {\n    setSearchingWord(e.currentTarget.value);\n  }\n\n  const engterDownHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      searchHandler();\n    }\n  }\n\n  return (\n    <Space\n      css={[styles.root.base]}\n      {...other}\n    >\n    <Input \n      placeholder='Search for a word...' \n      withLabel={false}\n      css={[styles.input.base({buttonWidth})]}\n      sizing={small ? 'medium' : 'large'}\n      onChange={(e) => inputHandler(e)}\n      value={searchingWord}\n      autoFocus\n      onKeyDown={(e) => engterDownHandler(e)}\n    />\n    <Button\n      size={small ? 'medium' : 'large'}\n      className={'search-button'} \n      css={[styles.button.base]}\n      onClick={searchHandler}\n    >\n      {isSearching ? <PulseLoader size=\"6px\" color={theme.palette.secondary.normal} /> : 'Search'}\n    </Button>\n  </Space>\n  )\n};\n\nexport default Search;\n","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/Header.tsx",["377"],[],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { Search } from 'components/Search';\nimport { Tab } from 'components/Tab';\nimport { relative } from 'node:path/win32';\nimport { FC } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { currentTabSelector } from 'store/currentTab';\nimport { ALL_TABS } from 'utils/tabs';\nimport { theme } from 'utils/theme';\nimport Logo from './Logo';\nimport Titles from './Titles';\n\ninterface IHeaderProps extends React.HTMLAttributes<HTMLDivElement> {\n  scrollTop?: number;\n};\n\nconst styles = {\n  base: css({\n    height: '90px',\n    background: theme.palette.primary.darkest,\n    borderRadius: '8px 8px 0 0',\n    padding: '10px 25px',\n    position: 'relative',\n    boxSizing: 'border-box',\n    display: 'flex',\n    alignItems: 'flex-start',\n    flexDirection: 'column',\n    justifyContent: 'flex-end',\n  }), \n  compacted: css({\n\n  }),\n  titles: css({\n    marginLeft: '80px',\n    '& > h1': {\n      color: theme.palette.secondary.normal,\n      fontSize: '18px',\n      marginTop: 5,\n    },\n    '& > p': {\n      display: 'none'\n    },\n  }),\n  titlesPre: css({\n    position: 'static',\n    flexGrow: 1,\n    marginLeft: '80px',\n    '& > h1': {\n      color: theme.palette.secondary.normal,\n    },\n    '& > p': {\n      display: 'none'\n    },\n  }),\n  logo: css({\n    width: 65,\n    height: 65,\n    top: 13,\n    '& > div': {\n      width: 50,\n      height: 50,\n      '& > *': {\n        width: 28,\n      }\n    }\n  }),\n  search: css({\n    marginLeft: 80,\n    marginBottom: 5,\n    alignSelf: 'stretch',\n  }),\n  tabGroup: css({\n    marginLeft: 120,\n    marginBottom: -10,\n  })\n}\n\nconst Header: FC<IHeaderProps> = ({ scrollTop, ...other }) => {\n  const [currentTab, setCurrentTab] = useRecoilState(currentTabSelector);\n  const isCompacted = scrollTop !== undefined && scrollTop > 24;\n  const isExtraCompacted = scrollTop !== undefined && scrollTop > 155;\n\n  return (\n    <header css={[styles.base, isCompacted && styles.compacted]} {...other}>\n      <Logo css={[isCompacted && styles.logo]} shrincted={isCompacted}/>\n      <Titles css={[isCompacted && styles.titlesPre, isExtraCompacted && currentTab === 'search' && styles.titles,]} />\n      {isExtraCompacted && currentTab === 'search' && <Search small css={[styles.search]} />}\n      {!isCompacted && (\n        <Tab.Group\n          css={[\n            styles.tabGroup\n          ]}\n        >\n          {ALL_TABS.map((tab) => (\n            <Tab \n              tabId={tab.tabId} \n              setCurrentTab={setCurrentTab} \n              currentTab={currentTab}\n              key={tab.tabId}\n            >\n              {tab.tabName}\n            </Tab>\n          ))}\n        </Tab.Group>\n      )}\n    </header>\n  )\n};\n\nexport default Header;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/Main.tsx",["378"],[],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FC, Ref, useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { searchErrorState } from 'store/searchError';\nimport { wordDataState } from 'store/wordData';\nimport { theme } from 'utils/theme';\n\ninterface IMainProps extends React.HTMLAttributes<HTMLDivElement> {\n\n};\n\nconst styles = {\n  base: css({\n    background: theme.palette.secondary.normal,\n    padding: '110px 25px 40px 25px',\n    borderRadius: '0 0 8px 8px',\n    overflowY: 'auto',\n  }),\n  setHeight: (height: number) => css({\n    maxHeight: height - 90 - 1,\n  })\n}\n\nconst Main: FC<IMainProps> = ({ children, ...other }) => {\n  const [windowHeight, setWindowHeight] = useState(600);\n  const [wordData] = useRecoilState(wordDataState);\n  const [searchError] = useRecoilState(searchErrorState);\n\n  useEffect(() => {\n    console.log(window.innerHeight)\n    if (wordData !== undefined || searchError !== undefined) {\n      setWindowHeight(window.innerHeight);\n    }\n  }, [wordData, searchError])\n\n  return (\n    <main\n      css={[styles.base, styles.setHeight(windowHeight)]}\n      {...other}\n    >\n      {children}\n    </main>\n  )\n};\n\nexport default Main;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/Header.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/hooks/useAxios.ts",["379","380","381","382"],[],"import { useState } from \"react\";\nimport { FunctionLike, FunctionLikeDeclaration } from \"typescript\";\n\nexport const useAxios = <ArgsT extends {}, ReturnT>(request: (args: ArgsT) => Promise<ReturnT>) => {\n  type requestReturnedType = ReturnType<typeof request>;\n  type requestArgsType = Parameters<typeof request>;\n\n  const [data, setData] = useState<ReturnT | undefined>(undefined);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<Error | undefined>(undefined);\n\n  const withProcessingRequest = async (args: ArgsT) => {\n    let data: ReturnT | undefined;\n    setData(undefined);\n    setError(undefined);\n    setLoading(true);\n    await request(args)\n    .then((res) => {\n      setData(res);\n      data = res;\n    })\n    .catch((error) => {\n      setError(error);\n    })\n    // try {\n    //   data = request(...args);\n    //   setData(data);\n    // } catch (error) {\n    //   setError(error as Error);\n    // }\n    setLoading(false);\n    return data;\n  }\n\n  return (\n    [\n      withProcessingRequest, \n      {data, loading, error}\n    ] as [(args: ArgsT) => Promise<ReturnT>, {data: ReturnT | undefined, loading: boolean, error: Error | undefined}]\n  );\n}\n\n\n\n","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Space/Space.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Button/Button.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/services/cambParser/index.ts",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/Logo.tsx",["383"],[],"/** @jsxImportSource @emotion/react */\nimport { css, keyframes } from '@emotion/react';\nimport { FC } from 'react';\nimport { theme } from 'utils/theme';\nimport { ReactComponent as LogoIcon } from 'assets/icons/Logo.svg'\nimport { useRecoilState } from 'recoil';\nimport { isSearchingState } from 'store/isSearching';\nimport { BounceLoader } from 'react-spinners';\n\ninterface ILogoProps extends React.HTMLAttributes<HTMLDivElement> {\n  shrincted?: boolean;\n};\n\nconst styles = {\n  base: css({\n    width: '100px',\n    height: '100px',\n    background: theme.palette.primary.normal,\n    borderRadius: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    position: 'absolute',\n    top: 'calc(90px/2 - 5px)',\n    '> div': {\n      width: '75px',\n      height: '75px',\n      background: theme.palette.secondary.normal,\n      borderRadius: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n    }\n  }),\n  imgWrap: css({\n    position: 'relative',\n    '& > *': {\n      marginTop: '5px'\n    }\n  }),\n  spinner: css({\n    position: 'absolute',\n    right: 0,\n    left: 0,\n    top: 0,\n    bottom: 0,\n    marginTop: '0px',\n  })\n}\n\nconst Logo: FC<ILogoProps> = ({ shrincted = false, ...other }) => {\n  const [ isSearching ] = useRecoilState(isSearchingState);\n\n  return (\n    <div\n      css={[\n        styles.base,\n      ]}\n      {...other}\n    >\n      <div\n        css={styles.imgWrap}\n      >\n        <LogoIcon />\n        {isSearching && <div css={styles.spinner}><BounceLoader color={theme.palette.primary.darkest} size={shrincted ? '50px' : '75px'} /></div>}\n      </div>\n    </div>\n  )\n};\n\nexport default Logo;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Layout/Titles.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/Word.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/DefinitionBlock.tsx",["384","385","386"],[],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Button from 'components/UI/Button/Button';\nimport { Label } from 'components/UI/Label';\nimport Typography from 'components/UI/Typography/Typography';\nimport React, { FC, ReactElement, ReactNode, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { ankiFieldsSelector } from 'store/ankiFields';\nimport { currentTabSelector } from 'store/currentTab';\nimport { searchingWordState } from 'store/searchingWord';\nimport { theme } from 'utils/theme';\nimport Definition from './Definition/Definition';\nimport { Example } from './Example';\n\ninterface IDefinitionBlockProps extends Omit<React.HTMLAttributes<HTMLDivElement>, 'children'>{\n  useCase: string,\n  level: string,\n  children:  ReactElement[],\n  word: string,\n};\n\ninterface IDefinitionBlockComposition {\n  Definition: typeof Definition,\n  Example: typeof Example\n}\n\nconst styles = {\n  root: {\n    base: css({\n      padding: '15px',\n      background: theme.palette.secondary.darker,\n      borderRadius: '12px',\n      margin: '10px 0',\n      ':last-child': {\n        marginBottom: 0,\n      }\n    })\n  },\n  header: {\n    base: css({\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'center',\n    })\n  },\n  label: {\n    base: css({\n      fontStyle: 'normal',\n    })\n  },\n  labelCaption: {\n    base: css({\n      margin: 0,\n      textTransform: 'uppercase',\n      fontSize: '12px'\n    })\n  }\n}\n\n\nexport interface IContextDefinition {\n  example: {\n    set: (newValue: string | undefined) => any,\n    get: string | undefined,\n  },\n  definition: {\n    set: (newValue: string | undefined) => any,\n    get: string | undefined,\n  }\n}\n\nexport const ContextDefinition = React.createContext<IContextDefinition | null>(null);\n\nconst DefinitionBlock: FC<IDefinitionBlockProps> & IDefinitionBlockComposition = ({ word, children, useCase, level }) => {\n  const [example, setExample] = useState<string>();\n  const [definition, setDefinition] = useState<string>();\n  const [ ankiFields, setAnkiFields ] = useRecoilState(ankiFieldsSelector);\n  const [ searchingWord ] = useRecoilState(searchingWordState);\n  const [ currentTab, setCurrentTab ] = useRecoilState(currentTabSelector);\n\n  const defaultContext: IContextDefinition = {\n    example: {\n      set: setExample,\n      get: example,\n    },\n    definition: {\n      set: setDefinition,\n      get: definition,\n    }\n  }\n\n  const handleAdd = () => {\n\n    setAnkiFields(ankiFields.map((field, i) => {\n      if (i === 0) {\n        return {...field, value: [word]}\n      } else if (i === 1) {\n        return {...field, value: definition ? [definition] : field.value}\n      } else if (i === 2) {\n        return {...field, value: example ? [example] : field.value}\n      } else {\n        return field\n      }\n    }))\n\n    setCurrentTab('add');\n  }\n  \n  return (\n    <ContextDefinition.Provider value={defaultContext}>\n      <div css={styles.root.base}>\n      <div css={styles.header.base}>\n        <Typography css={styles.labelCaption.base}>\n          {level ? <Label label={level} labelCss={styles.label.base}>{useCase}</Label> : useCase}\n        </Typography>\n        <div><Button size='small' onClick={() => handleAdd()}>Add +</Button></div>\n      </div>\n      {children}\n    </div>\n    </ContextDefinition.Provider>\n  )\n};\n\nDefinitionBlock.Definition = Definition;\nDefinitionBlock.Example = Example;\n\nexport default DefinitionBlock;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/Input.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/services/cambParser/searchWord.ts",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/Pronounce.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Label/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/Label.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/Definition/Definition.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/Example/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Label/Label.tsx",["387"],[],"/** @jsxImportSource @emotion/react */\nimport { css, SerializedStyles } from '@emotion/react';\nimport React, { FC, useLayoutEffect, useRef, useState } from 'react';\nimport { theme } from 'utils/theme';\n\ninterface ILabelProps extends React.HTMLAttributes<HTMLSpanElement> {\n  label: string,\n  labelCss?: {},\n};\n\nconst styles = {\n  base: css({\n    position: 'relative',\n    display: 'inline-flex',\n    alignItems: 'center',\n    color: 'inherit',\n    lineHeight: 'inherit',\n    fontWeight: 'inherit',\n  }),\n  label: {\n    base: css({\n      position: 'absolute',\n      right: 0,\n      fontSize: '10px',\n      // fontStyle: 'italic',\n      background: theme.palette.primary.normal,\n      color: theme.palette.secondary.normal,\n      padding: '3px 10px',\n      borderRadius: '14px',\n    }),\n    setPosition: (width: number, gap: number) => css({\n      right: -width - gap,\n    })\n  }\n}\n\nconst Label: FC<ILabelProps> = ({ children, label, labelCss, ...other }) => {\n\n  const labelRef = useRef<HTMLSpanElement>(null);\n  const [labelWidth, setLabelWidth] = useState<number>(0);\n  \n  useLayoutEffect(() => {\n    if (labelRef && labelRef.current) setLabelWidth(labelRef.current.offsetWidth);\n  }, [])\n\n  return (\n    <span\n      css={styles.base}\n      {...other}\n    >\n      <span\n        ref={labelRef}\n        css={[\n          styles.label.base,\n          styles.label.setPosition(labelWidth, children ? 10 : 0),\n          labelCss\n        ]}\n      >{label}</span>\n      {children}\n    </span>\n  )\n};\n\nexport default Label;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/Example/Example.tsx",["388","389","390","391"],[],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Typography from 'components/UI/Typography/Typography';\nimport { FC, useContext, useState } from 'react';\nimport bullet from 'assets/icons/bullet.svg';\nimport checkboxChecked from 'assets/icons/checkbox-checked.svg';\nimport checkboxUnchecked from 'assets/icons/checkbox-unchecked.svg';\nimport { ContextDefinition, IContextDefinition } from '../DefinitionBlock';\n\ninterface IExampleProps extends Omit< React.HTMLAttributes<HTMLDivElement>, 'children'> {\n  children: string[],\n};\n\nconst styles = {\n  root: {\n    base: css({\n      fontSize: '12px',\n      fontStyle: 'italic',\n      margin: 0,\n      paddingLeft: '0px',\n      position: 'relative',\n      'li': {\n        cursor: 'pointer',\n        paddingLeft: '23px',\n        listStyle: `none`,\n        '&::before': {\n          content: '\"\"',\n          width: '14px',\n          height: '14px',\n          position: 'absolute',\n          left: 0,\n          display: 'inline-block',\n          backgroundImage: `url(${checkboxUnchecked})`,\n          backgroundSize: '100%',\n        },\n        marginBottom: '8px',\n        ':last-child': {\n          marginBottom: 0\n        }\n      }\n    })\n  },\n  li: {\n    checked: css({\n      '&::before': {\n        // content: '\"\"',\n        // width: '14px',\n        // height: '14px',\n        // position: 'absolute',\n        // left: 0,\n        // display: 'inline-block',\n        backgroundImage: `url(${checkboxChecked}) !important`,\n        // backgroundSize: '100%',\n      },\n    })\n  }\n}\n\nconst Example: FC<IExampleProps> = ({ children,  }) => {\n  const context = useContext(ContextDefinition);\n  \n\n  const handleClick = (value: string) => {\n    if (context?.example.get === value) {\n      context?.example.set(undefined);\n    }  else {\n      context?.example.set(value);\n    } \n  }\n\n  return (\n    <ul css={styles.root.base}>\n      {children.map((child) => (\n        <li css={context?.example.get === child && styles.li.checked} onClick={() => handleClick(child)}>{child}</li>\n      ))}\n    </ul>\n  )\n};\n\nexport default Example;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Tab/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Tab/Tab.tsx",["392"],[],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FC } from 'react';\nimport { CurrentTabType } from 'store/currentTab';\nimport { theme } from 'utils/theme';\nimport Body from './Body';\nimport Group from './Group';\n\ninterface ITabProps extends React.HTMLAttributes<HTMLDivElement> {\n  setCurrentTab: (...args: any) => any,\n  currentTab: string,\n  tabId: string,\n};\n\ninterface ITabCompound {\n  Body: typeof Body,\n  Group: typeof Group\n}\n\nconst styles = {\n  root: {\n    base: css({\n      transition: theme.transition,\n      color: theme.palette.secondary.normal,\n      background: theme.palette.primary.normal,\n      padding: '6px 10px',\n      borderRadius: '8px 8px 0 0',\n      fontSize: '10px',\n      cursor: 'pointer',\n      '&:hover': {\n        position: 'relative',\n        padding: '7px 11px',\n        background: theme.palette.primary.lighter,\n        color: theme.palette.secondary.normal,\n      }\n    }),\n    chosen: css({\n      color: theme.palette.primary.darker,\n      background: theme.palette.secondary.normal,\n      '&:hover': {\n        color: theme.palette.primary.darker,\n        background: theme.palette.secondary.normal,\n      }\n    })\n  }\n}\n\nconst Tab: FC<ITabProps> & ITabCompound = ({ children, currentTab, setCurrentTab, tabId, ...other }) => {\n  return (\n    <div\n      css={[\n        styles.root.base,\n        currentTab === tabId && styles.root.chosen,\n      ]}\n      onClick={() => setCurrentTab(tabId)}\n      {...other}\n    >\n      {children}\n    </div>\n  )\n};\n\nTab.Body = Body;\nTab.Group = Group;\n\nexport default Tab;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Tab/Body.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/utils/tabs.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Tab/Group.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/currentTab.ts",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/searchError.ts",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/wordData.ts",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/isSearching.ts",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/searchingWord.ts",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/TextArea.tsx",["393","394","395","396","397"],[],"/** @jsxImportSource @emotion/react */\nimport { FC, ReactNode, useEffect, useRef, useState } from 'react';\nimport { styles } from './Input';\nimport Label from './Label';\nimport {Editor, EditorState} from 'draft-js';\nimport { ContentEditable } from 'components/ContentEditable';\nimport { IContentEditableProps } from 'components/ContentEditable/ContentEditable';\n\n\ninterface ITextAreaProps extends IContentEditableProps<'div'> {\n  icon?: React.ReactNode,\n  withLabel?: boolean,\n  css?: {},\n  sizing?: 'large' | 'medium',\n  multy?: boolean,\n};\n\nconst TextArea: FC<ITextAreaProps> = ({ sizing = 'large', icon, placeholder = '', withLabel = true, css = {}, className, contentValue, ...other }) => {\n  const [isFocused, setIsFocused] = useState(false);\n  const refInput = useRef<HTMLDivElement>(null);\n\n  // useEffect(() => {\n  //   if (refInput.current) {\n  //     refInput.current.textContent = children;\n  //   }\n  // })\n  \n  return (\n    <div\n    css={[\n      styles.base,\n      styles[sizing],\n      css,\n    ]}\n    className={className}\n   >\n    {icon != null && icon}\n    {placeholder !== '' && (\n      <Label isLabel={isFocused || (contentValue?.length !== 0 && contentValue !== undefined)} placeholderOnly={!withLabel} >{placeholder}</Label>\n    )}\n      <ContentEditable\n        className='multy-input'\n        css={[\n          withLabel ? styles.inputWithLabel : styles.inputWithoutLabel,\n          styles.placeholder.base,\n          sizing === 'medium' && styles.placeholder.medium,\n        ]}\n        placeholder={!withLabel ? placeholder : undefined}\n        onFocus={() => {setIsFocused(true)}}\n        onBlur={() => {setIsFocused(false)}}\n        contentValue={contentValue}\n        {...other}\n      />\n    </div>\n  )\n};\n\nexport default TextArea;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/ContentEditable/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/ContentEditable/ContentEditable.tsx",["398","399","400","401","402","403","404"],[],"import React, { FC, ReactNode, useEffect, useRef, useState } from 'react';\nimport { Type } from 'typescript';\nimport uniqid from 'uniqid';\nimport ReactHTMLParser from 'react-html-parser';\nimport { getCaretPosition } from 'utils/helpers/getCaretPosition';\nimport { setCaretPosition } from 'utils/helpers/setCaretPosition';\nconst brId = uniqid('br-');\n\nexport type IContentEditableProps<T extends React.ElementType> = {\n  component?: T;\n  onContentChange?: (event: string[]) => void;\n  contentValue?: string[];\n} & React.ComponentPropsWithoutRef<T>;\n\nconst ContentEditable = <T extends React.ElementType = 'div',>({ contentValue, id: oldId, component, onContentChange = () => {}, onInput = () => {}, ...other }: IContentEditableProps<T>) => {\n  const Component = component || 'div';\n  const id = uniqid('content-editable-');\n  const [caret, setCaret] = useState<{nodeIndex: number, caretPosition: number} | undefined>();\n\n  const resetNodes = (selector: string) => {\n    const element = document.querySelector(selector);\n    if (element) element.innerHTML = '';\n  }\n\n  const setContent = (selector: string, newContent?: string[] | undefined) => {\n    const element = document.querySelector(selector);\n    if (element && newContent) {\n      element.innerHTML = '';\n      newContent.forEach((node, i) => {\n        const wrapedNode = document.createElement('div')\n        if (node === brId) {\n          const br = document.createElement('br');\n          wrapedNode.append(br);\n        } else {\n          wrapedNode.innerHTML = node;\n        }\n        element.append(wrapedNode);\n      })\n      console.log('Childrens have been appended!')\n    } else if (element && !newContent) {\n      element.innerHTML = '';\n      console.log('Element has been cleaned')\n    }\n    \n    if (caret) setCaretPosition(id, caret.nodeIndex, caret.caretPosition);\n  }\n\n  useEffect(() => {\n    setContent(`#${id}`, contentValue);\n  }, [contentValue])\n\n  function handleChange(e: React.FormEvent<HTMLDivElement>) {\n    const imgMaxWidth = e.currentTarget.clientWidth - 30;\n    const allImg = e.currentTarget.getElementsByTagName('img');\n    for (let i = 0; i < allImg.length; i++) {\n      const img = allImg[i];\n      if (img.width > imgMaxWidth)\n        img.width = imgMaxWidth;\n    }\n\n    let parsedNodes: string[] = [];\n    const firstText = e.currentTarget.childNodes[0]?.nodeName === '#text' ? e.currentTarget.childNodes[0]?.textContent : undefined;\n    const firstImg = e.currentTarget.children[0]?.tagName === 'IMG' ? e.currentTarget.getElementsByTagName('img')[0].outerHTML : undefined;\n    const nodes = e.currentTarget.getElementsByTagName('div');\n\n    firstImg && parsedNodes.push(firstImg);\n    firstText && parsedNodes.push(firstText);\n\n    if (nodes.length === 0) {\n      const caretPosition = getCaretPosition(e.currentTarget);\n      if (caretPosition) {\n        console.log({nodeIndex: 0, caretPosition: caretPosition[0]})\n        setCaret({nodeIndex: 0, caretPosition: caretPosition[0]})\n      }\n    }\n\n    for (let i = 0; i < nodes.length; i++) {\n      const currentNode = nodes[i];\n      let imgs: string[] = [];\n      let text: string | undefined;\n\n      const caretPosition = getCaretPosition(currentNode);\n      if (caretPosition) {\n        console.log({nodeIndex: i, caretPosition: caretPosition[0]})\n        setCaret({nodeIndex: i, caretPosition: caretPosition[0]})\n      }\n\n      if (currentNode.children[0]?.tagName === 'BR' && currentNode.childElementCount === 1) {\n        text = brId;\n      } else if (currentNode.children[0]?.tagName === 'IMG') {\n        const imgElements = currentNode.getElementsByTagName('img');\n        // img = (currentImg?.outerHTML);\n        for (let i = 0; i < imgElements.length; i++) {\n          const img = imgElements[i];\n          if (img.width > imgMaxWidth)\n            img.width = imgMaxWidth;\n          imgs.push(img.outerHTML);\n        }\n      } else if (currentNode.textContent) {\n        text = currentNode.textContent;\n      }\n      parsedNodes = [...parsedNodes, ...imgs];\n      text && parsedNodes.push(text);\n    }\n    console.log(parsedNodes);\n    onContentChange(parsedNodes);\n    // setContent(`#${id}`, contentValue);\n    // resetNodes(`#${id}`);\n  }\n\n  return (\n    <Component\n      id={id}\n      contentEditable\n      onInput={(e) => {handleChange(e); onInput(e)}}\n      {...other}\n    >\n      {/* {contentValue?.map((node) => (\n        <div dangerouslySetInnerHTML={{ __html: node }} />\n      ))} */}\n    </Component>\n  )\n};\n\nexport default ContentEditable;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/utils/helpers/getCaretPosition.js",["405","406","407"],[],"// getCaretPosition: return [start, end] as offsets to elem.textContent that\n//   correspond to the selected portion of text\n//   (if start == end, caret is at given position and no text is selected)\nexport function getCaretPosition(elem) {\n  // node_walk: walk the element tree, stop when func(node) returns false\n  function node_walk(node, func) {\n    var result = func(node);\n    for(node = node.firstChild; result !== false && node; node = node.nextSibling)\n      result = node_walk(node, func);\n    return result;\n  };\n\n  var sel = window.getSelection();\n  var cum_length = [0, 0];\n\n  if(sel.anchorNode == elem)\n    cum_length = [sel.anchorOffset, sel.extentOffset];\n  else {\n    var nodes_to_find = [sel.anchorNode, sel.extentNode];\n    if(!elem.contains(sel.anchorNode) || !elem.contains(sel.extentNode))\n      return undefined;\n    else {\n      var found = [0,0];\n      var i;\n      node_walk(elem, function(node) {\n        for(i = 0; i < 2; i++) {\n          if(node == nodes_to_find[i]) {\n            found[i] = true;\n            if(found[i == 0 ? 1 : 0])\n              return false; // all done\n          }\n        }\n\n        if(node.textContent && !node.firstChild) {\n          for(i = 0; i < 2; i++) {\n            if(!found[i])\n              cum_length[i] += node.textContent.length;\n          }\n        }\n      });\n      cum_length[0] += sel.anchorOffset;\n      cum_length[1] += sel.extentOffset;\n    }\n  }\n  if(cum_length[0] <= cum_length[1])\n    return cum_length;\n  return [cum_length[1], cum_length[0]];\n}","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/utils/helpers/setCaretPosition.js",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AboutPage/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AddPage/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/SearchPage/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/SettingsPage/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AddPage/AddPage.tsx",["408","409","410","411","412"],[],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ContentEditable } from 'components/ContentEditable';\nimport Button from 'components/UI/Button/Button';\nimport { Input } from 'components/UI/Input';\nimport { Select } from 'components/UI/Select';\nimport React, { FC, ReactNode, useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { currentTabSelector } from 'store/currentTab';\nimport { ankiFieldsSelector } from 'store/ankiFields';\nimport { ALL_TABS } from 'utils/tabs';\nimport { theme } from 'utils/theme';\n\ninterface IAddPageProps {\n\n};\n\nconst styles = {\n  root: {\n    base: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '10px',\n      '& > *': {\n        \n      }\n    })\n  },\n  buttonGroup: {\n    base: css({\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      justifyContent: 'center',\n    })\n  },\n  button: {\n    clean: css({\n      // background: theme.palette.primary.normal\n      flexGrow: 1,\n    }),\n    submit: css({\n      background: theme.palette.primary.lightest,\n      flexGrow: 1,\n    })\n  },\n  selectGroup: {\n    base: css({\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      '& > *': {\n        width: '100%',\n      },\n      marginBottom: '20px',\n    })\n  }\n}\n\nconst AddPage: FC<IAddPageProps> = () => {\n  const [ ankiFields, setAnkiFields ] = useRecoilState(ankiFieldsSelector);\n  const [noteType, setNoteType] = useState<string>();\n\n  const handleClean = () => {\n    setAnkiFields(ankiFields.map((field) => ({...field, value: undefined})))\n  }\n\n  const options = [\n    {id: '1', name: 'One'},\n    {id: '2', name: 'Two'},\n    {id: '3', name: 'Tree'}\n  ]\n\n  return (\n    <div css={styles.root.base}>\n      <div css={styles.selectGroup.base}>\n        <Select placeholder='Card type' options={options} value={noteType} onChangeValue={(newValue) => {setNoteType(newValue)}} />\n        <Select placeholder='Deck' options={options} value={noteType} onChangeValue={(newValue) => {setNoteType(newValue)}} />\n      </div>\n      {ankiFields && (\n        <div css={styles.selectGroup.base}>\n        {ankiFields.map((field, i) => (\n          <Input.TextArea\n            key={field.name} \n            sizing='large'   \n            placeholder={field.name}\n            onContentChange={(nodes) => {setAnkiFields(ankiFields.map((_field) => _field.name === field.name ? {..._field, value: nodes} : _field))}} \n            contentValue={field.value}\n          />\n        ))}\n      </div>\n      )}\n      <div css={styles.buttonGroup.base}>\n        <Button css={styles.button.clean} outline onClick={() => handleClean()} >Clean</Button>\n        <Button css={styles.button.submit}>Add card</Button>\n      </div>\n    </div>\n  )\n};\n\nexport default AddPage;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AboutPage/AboutPage.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/SearchPage/SearchPage.tsx",["413","414"],[],"import { Search } from 'components/Search';\nimport { Checkbox } from 'components/UI/Checkbox';\nimport Typography from 'components/UI/Typography/Typography';\nimport { WordBlock } from 'components/WordBlock';\nimport { FC, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { searchErrorState } from 'store/searchError';\nimport { wordDataState } from 'store/wordData';\n\ninterface ISearchPageProps {\n\n};\n\nconst SearchPage: FC<ISearchPageProps> = () => {\n  const [ wordData ] = useRecoilState(wordDataState);\n  const [ searchError ] = useRecoilState(searchErrorState);\n\n  return (\n    <>\n      <Search />\n      {searchError && (\n        <Typography type='h1'>\n          {'Oops... Not found :('}\n        </Typography>\n      )}\n      {wordData?.map((word) => (\n        <WordBlock>\n          <WordBlock.Header>\n            <WordBlock.Header.Word \n              partOfSpeech={word.partOfspeech} \n              pronounce={{uk: word.uk, us: word.us}}\n            >\n              {word.word}\n            </WordBlock.Header.Word>\n          </WordBlock.Header>\n            {word.useCases.map((useCase) => (\n              useCase.definition.map((definition) => (\n                <WordBlock.DefinitionBlock\n                  useCase={useCase.content}\n                  level={definition.lvl}\n                  word={word.word}\n                >\n                  <WordBlock.DefinitionBlock.Definition>\n                    {definition.content}\n                  </WordBlock.DefinitionBlock.Definition>\n                  <WordBlock.DefinitionBlock.Example>\n                    {definition.examples}\n                  </WordBlock.DefinitionBlock.Example>\n                </WordBlock.DefinitionBlock>\n              ))\n            ))}\n          \n        </WordBlock>\n      ))}\n    </>\n  )\n};\n\nexport default SearchPage;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/SettingsPage/SettingsPage.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Audio/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Audio/Audio.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Select/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Select/Select.tsx",["415"],[],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React, { createContext, FC, useEffect, useRef, useState } from 'react';\nimport { theme } from 'utils/theme';\nimport { Input } from '../Input';\nimport Option from './Option';\n\ninterface OptionType {\n  id: string,\n  name: string,\n}\n\ninterface ISelectProps extends React.HTMLAttributes<HTMLDivElement> {\n  options: OptionType[],\n  value?: string | undefined,\n  onChangeValue?: (newValue: string) => void,\n  placeholder?: string,\n};\n\nconst styles = {\n  root: {\n    base: css({\n      position: 'relative',\n    })\n  },\n  menu: {\n    base: css({\n      background: theme.palette.secondary.darker,\n      borderRadius: '12px',\n      fontSize: '14px',\n      marginTop: '10px',\n      boxShadow: '0px 0px 4px 3px rgba(34, 60, 80, 0.2)',\n      position: 'absolute',\n      zIndex: '5',\n      width: '100%',\n      outline: `2px solid ${theme.palette.primary.lightest}`,\n    }),\n    hidden: css({\n      display: 'none',\n    })\n  }\n}\n\nconst Select: FC<ISelectProps> = ({ placeholder, options, value, onChangeValue = () => {}, ...other }) => {\n  const [isOpened, setIsOpened] = useState(false);\n  const rootRef = useRef<HTMLDivElement>(null); \n\n  useEffect(() => {\n    const handleClickOutside = (event: any) => {\n      if (rootRef.current && !rootRef.current.contains(event.target)) {\n        setIsOpened(false);\n      }\n    };\n    document.addEventListener('click', handleClickOutside, true);\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  }, []);\n\n  const getNameById = (id: string | undefined) => {\n    return options.find((elem) => elem.id === id)?.name;\n  }\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Tab' || e.key === 'Escape') {\n      setIsOpened(false);\n      e.currentTarget.blur();\n    }\n  } \n\n  return (\n    <div\n      ref={rootRef}\n      css={styles.root.base}\n      {...other}\n    >\n      <Input \n        placeholder={placeholder}\n        value={getNameById(value)} \n        onFocus={() => setIsOpened(true)} \n        onKeyDown={(e) => handleKeyPress(e)}/>\n      <div\n        css={[\n          styles.menu.base,\n          !isOpened && styles.menu.hidden,\n        ]}\n      >\n        {options.map((option) => (\n          <Option id={option.id} isChecked={value === option.id} onClick={() => {onChangeValue(option.id); setIsOpened(false)}}>{option.name}</Option>\n        ))}\n      </div>\n    </div>\n  )\n};\n\nexport default Select;","/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Select/Option.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Checkbox/index.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Checkbox/Checkbox.tsx",[],[],"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/store/ankiFields.ts",[],[],{"ruleId":"416","severity":1,"message":"417","line":1,"column":28,"nodeType":"418","messageId":"419","endLine":1,"endColumn":43},{"ruleId":"416","severity":1,"message":"420","line":2,"column":8,"nodeType":"418","messageId":"419","endLine":2,"endColumn":12},{"ruleId":"416","severity":1,"message":"421","line":3,"column":10,"nodeType":"418","messageId":"419","endLine":3,"endColumn":20},{"ruleId":"416","severity":1,"message":"422","line":3,"column":22,"nodeType":"418","messageId":"419","endLine":3,"endColumn":40},{"ruleId":"416","severity":1,"message":"423","line":7,"column":10,"nodeType":"418","messageId":"419","endLine":7,"endColumn":15},{"ruleId":"416","severity":1,"message":"424","line":8,"column":8,"nodeType":"418","messageId":"419","endLine":8,"endColumn":14},{"ruleId":"416","severity":1,"message":"425","line":9,"column":8,"nodeType":"418","messageId":"419","endLine":9,"endColumn":13},{"ruleId":"416","severity":1,"message":"426","line":10,"column":10,"nodeType":"418","messageId":"419","endLine":10,"endColumn":19},{"ruleId":"416","severity":1,"message":"427","line":11,"column":10,"nodeType":"418","messageId":"419","endLine":11,"endColumn":16},{"ruleId":"416","severity":1,"message":"428","line":13,"column":10,"nodeType":"418","messageId":"419","endLine":13,"endColumn":28},{"ruleId":"416","severity":1,"message":"429","line":14,"column":10,"nodeType":"418","messageId":"419","endLine":14,"endColumn":23},{"ruleId":"416","severity":1,"message":"430","line":15,"column":10,"nodeType":"418","messageId":"419","endLine":15,"endColumn":26},{"ruleId":"416","severity":1,"message":"431","line":16,"column":8,"nodeType":"418","messageId":"419","endLine":16,"endColumn":18},{"ruleId":"416","severity":1,"message":"432","line":23,"column":10,"nodeType":"418","messageId":"419","endLine":23,"endColumn":15},{"ruleId":"416","severity":1,"message":"433","line":23,"column":17,"nodeType":"418","messageId":"419","endLine":23,"endColumn":25},{"ruleId":"416","severity":1,"message":"434","line":24,"column":10,"nodeType":"418","messageId":"419","endLine":24,"endColumn":19},{"ruleId":"416","severity":1,"message":"435","line":24,"column":21,"nodeType":"418","messageId":"419","endLine":24,"endColumn":33},{"ruleId":"416","severity":1,"message":"436","line":25,"column":22,"nodeType":"418","messageId":"419","endLine":25,"endColumn":35},{"ruleId":"437","severity":1,"message":"438","line":36,"column":6,"nodeType":"439","endLine":36,"endColumn":8,"suggestions":"440"},{"ruleId":"437","severity":1,"message":"441","line":46,"column":6,"nodeType":"439","endLine":46,"endColumn":8,"suggestions":"442"},{"ruleId":"443","severity":1,"message":"444","line":35,"column":31,"nodeType":"445","endLine":35,"endColumn":48},{"ruleId":"443","severity":1,"message":"444","line":38,"column":31,"nodeType":"445","endLine":38,"endColumn":48},{"ruleId":"416","severity":1,"message":"446","line":3,"column":14,"nodeType":"418","messageId":"419","endLine":3,"endColumn":30},{"ruleId":"416","severity":1,"message":"447","line":4,"column":10,"nodeType":"418","messageId":"419","endLine":4,"endColumn":15},{"ruleId":"416","severity":1,"message":"448","line":19,"column":9,"nodeType":"418","messageId":"419","endLine":19,"endColumn":18},{"ruleId":"416","severity":1,"message":"449","line":53,"column":10,"nodeType":"418","messageId":"419","endLine":53,"endColumn":18},{"ruleId":"416","severity":1,"message":"450","line":55,"column":10,"nodeType":"418","messageId":"419","endLine":55,"endColumn":21},{"ruleId":"437","severity":1,"message":"451","line":73,"column":6,"nodeType":"439","endLine":73,"endColumn":12,"suggestions":"452"},{"ruleId":"437","severity":1,"message":"453","line":77,"column":6,"nodeType":"439","endLine":77,"endColumn":15,"suggestions":"454"},{"ruleId":"437","severity":1,"message":"451","line":84,"column":6,"nodeType":"439","endLine":84,"endColumn":13,"suggestions":"455"},{"ruleId":"416","severity":1,"message":"456","line":88,"column":13,"nodeType":"418","messageId":"419","endLine":88,"endColumn":16},{"ruleId":"416","severity":1,"message":"457","line":5,"column":10,"nodeType":"418","messageId":"419","endLine":5,"endColumn":18},{"ruleId":"416","severity":1,"message":"458","line":3,"column":14,"nodeType":"418","messageId":"419","endLine":3,"endColumn":17},{"ruleId":"416","severity":1,"message":"459","line":2,"column":10,"nodeType":"418","messageId":"419","endLine":2,"endColumn":22},{"ruleId":"416","severity":1,"message":"460","line":2,"column":24,"nodeType":"418","messageId":"419","endLine":2,"endColumn":47},{"ruleId":"416","severity":1,"message":"461","line":5,"column":8,"nodeType":"418","messageId":"419","endLine":5,"endColumn":27},{"ruleId":"416","severity":1,"message":"462","line":6,"column":8,"nodeType":"418","messageId":"419","endLine":6,"endColumn":23},{"ruleId":"416","severity":1,"message":"463","line":2,"column":15,"nodeType":"418","messageId":"419","endLine":2,"endColumn":24},{"ruleId":"416","severity":1,"message":"464","line":6,"column":35,"nodeType":"418","messageId":"419","endLine":6,"endColumn":44},{"ruleId":"416","severity":1,"message":"465","line":78,"column":11,"nodeType":"418","messageId":"419","endLine":78,"endColumn":24},{"ruleId":"416","severity":1,"message":"466","line":79,"column":11,"nodeType":"418","messageId":"419","endLine":79,"endColumn":21},{"ruleId":"416","severity":1,"message":"467","line":2,"column":15,"nodeType":"418","messageId":"419","endLine":2,"endColumn":31},{"ruleId":"416","severity":1,"message":"431","line":3,"column":8,"nodeType":"418","messageId":"419","endLine":3,"endColumn":18},{"ruleId":"416","severity":1,"message":"468","line":4,"column":26,"nodeType":"418","messageId":"419","endLine":4,"endColumn":34},{"ruleId":"416","severity":1,"message":"469","line":5,"column":8,"nodeType":"418","messageId":"419","endLine":5,"endColumn":14},{"ruleId":"416","severity":1,"message":"470","line":8,"column":29,"nodeType":"418","messageId":"419","endLine":8,"endColumn":47},{"ruleId":"416","severity":1,"message":"471","line":4,"column":10,"nodeType":"418","messageId":"419","endLine":4,"endColumn":24},{"ruleId":"416","severity":1,"message":"464","line":2,"column":14,"nodeType":"418","messageId":"419","endLine":2,"endColumn":23},{"ruleId":"416","severity":1,"message":"472","line":2,"column":25,"nodeType":"418","messageId":"419","endLine":2,"endColumn":34},{"ruleId":"416","severity":1,"message":"473","line":5,"column":9,"nodeType":"418","messageId":"419","endLine":5,"endColumn":15},{"ruleId":"416","severity":1,"message":"474","line":5,"column":17,"nodeType":"418","messageId":"419","endLine":5,"endColumn":28},{"ruleId":"416","severity":1,"message":"475","line":20,"column":9,"nodeType":"418","messageId":"419","endLine":20,"endColumn":17},{"ruleId":"416","severity":1,"message":"476","line":1,"column":17,"nodeType":"418","messageId":"419","endLine":1,"endColumn":19},{"ruleId":"416","severity":1,"message":"464","line":1,"column":21,"nodeType":"418","messageId":"419","endLine":1,"endColumn":30},{"ruleId":"416","severity":1,"message":"477","line":1,"column":43,"nodeType":"418","messageId":"419","endLine":1,"endColumn":49},{"ruleId":"416","severity":1,"message":"478","line":2,"column":10,"nodeType":"418","messageId":"419","endLine":2,"endColumn":14},{"ruleId":"416","severity":1,"message":"479","line":4,"column":8,"nodeType":"418","messageId":"419","endLine":4,"endColumn":23},{"ruleId":"416","severity":1,"message":"480","line":20,"column":9,"nodeType":"418","messageId":"419","endLine":20,"endColumn":19},{"ruleId":"437","severity":1,"message":"481","line":50,"column":6,"nodeType":"439","endLine":50,"endColumn":20,"suggestions":"482"},{"ruleId":"483","severity":1,"message":"484","line":16,"column":21,"nodeType":"485","messageId":"486","endLine":16,"endColumn":23},{"ruleId":"483","severity":1,"message":"484","line":27,"column":19,"nodeType":"485","messageId":"486","endLine":27,"endColumn":21},{"ruleId":"483","severity":1,"message":"484","line":29,"column":24,"nodeType":"485","messageId":"486","endLine":29,"endColumn":26},{"ruleId":"416","severity":1,"message":"487","line":3,"column":10,"nodeType":"418","messageId":"419","endLine":3,"endColumn":25},{"ruleId":"416","severity":1,"message":"464","line":7,"column":21,"nodeType":"418","messageId":"419","endLine":7,"endColumn":30},{"ruleId":"416","severity":1,"message":"472","line":7,"column":32,"nodeType":"418","messageId":"419","endLine":7,"endColumn":41},{"ruleId":"416","severity":1,"message":"488","line":9,"column":10,"nodeType":"418","messageId":"419","endLine":9,"endColumn":28},{"ruleId":"416","severity":1,"message":"489","line":11,"column":10,"nodeType":"418","messageId":"419","endLine":11,"endColumn":18},{"ruleId":"416","severity":1,"message":"490","line":2,"column":10,"nodeType":"418","messageId":"419","endLine":2,"endColumn":18},{"ruleId":"416","severity":1,"message":"468","line":5,"column":14,"nodeType":"418","messageId":"419","endLine":5,"endColumn":22},{"ruleId":"416","severity":1,"message":"491","line":3,"column":17,"nodeType":"418","messageId":"419","endLine":3,"endColumn":30},"@typescript-eslint/no-unused-vars","'useLayoutEffect' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'DOMMessage' is defined but never used.","'DOMMessageResponse' is defined but never used.","'Input' is defined but never used.","'Button' is defined but never used.","'Space' is defined but never used.","'WordBlock' is defined but never used.","'Search' is defined but never used.","'searchingWordState' is defined but never used.","'wordDataState' is defined but never used.","'searchErrorState' is defined but never used.","'Typography' is defined but never used.","'title' is assigned a value but never used.","'setTitle' is assigned a value but never used.","'headlines' is assigned a value but never used.","'setHeadlines' is assigned a value but never used.","'setCurrnetTab' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAnkiFields'. Either include it or remove the dependency array.","ArrayExpression",["492"],"React Hook useEffect has missing dependencies: 'ankiFields.length' and 'setAnkiFields'. Either include them or remove the dependency array.",["493"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'MutableRefObject' is defined but never used.","'theme' is defined but never used.","'headerRef' is assigned a value but never used.","'wordData' is assigned a value but never used.","'searchError' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setSearchError' and 'setWordData'. Either include them or remove the dependency array.",["494"],"React Hook useEffect has a missing dependency: 'setIsSearching'. Either include it or remove the dependency array.",["495"],["496"],"'res' is assigned a value but never used.","'relative' is defined but never used.","'Ref' is defined but never used.","'FunctionLike' is defined but never used.","'FunctionLikeDeclaration' is defined but never used.","'requestReturnedType' is defined but never used.","'requestArgsType' is defined but never used.","'keyframes' is defined but never used.","'ReactNode' is defined but never used.","'searchingWord' is assigned a value but never used.","'currentTab' is assigned a value but never used.","'SerializedStyles' is defined but never used.","'useState' is defined but never used.","'bullet' is defined but never used.","'IContextDefinition' is defined but never used.","'CurrentTabType' is defined but never used.","'useEffect' is defined but never used.","'Editor' is defined but never used.","'EditorState' is defined but never used.","'refInput' is assigned a value but never used.","'FC' is defined but never used.","'useRef' is defined but never used.","'Type' is defined but never used.","'ReactHTMLParser' is defined but never used.","'resetNodes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'setContent'. Either include them or remove the dependency array.",["497"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ContentEditable' is defined but never used.","'currentTabSelector' is defined but never used.","'ALL_TABS' is defined but never used.","'Checkbox' is defined but never used.","'createContext' is defined but never used.",{"desc":"498","fix":"499"},{"desc":"500","fix":"501"},{"desc":"502","fix":"503"},{"desc":"504","fix":"505"},{"desc":"506","fix":"507"},{"desc":"508","fix":"509"},"Update the dependencies array to be: [setAnkiFields]",{"range":"510","text":"511"},"Update the dependencies array to be: [ankiFields.length, setAnkiFields]",{"range":"512","text":"513"},"Update the dependencies array to be: [data, setSearchError, setWordData]",{"range":"514","text":"515"},"Update the dependencies array to be: [loading, setIsSearching]",{"range":"516","text":"517"},"Update the dependencies array to be: [error, setSearchError, setWordData]",{"range":"518","text":"519"},"Update the dependencies array to be: [contentValue, id, setContent]",{"range":"520","text":"521"},[1546,1548],"[setAnkiFields]",[1780,1782],"[ankiFields.length, setAnkiFields]",[2300,2306],"[data, setSearchError, setWordData]",[2364,2373],"[loading, setIsSearching]",[2483,2490],"[error, setSearchError, setWordData]",[1907,1921],"[contentValue, id, setContent]"]