{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/ContentEditable/ContentEditable.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContentEditable = _ref => {\n  let {\n    component,\n    onContentChange,\n    onInput = () => {},\n    ...other\n  } = _ref;\n  const Component = component || 'div';\n\n  const handleChange = e => {\n    const imgMaxWidth = e.currentTarget.clientWidth - 30; // const firstText;\n\n    const nodes = e.currentTarget.getElementsByTagName('div');\n    let parsedNodes = [];\n\n    for (let i = 0; i < nodes.length; i++) {\n      const currentNode = nodes[i];\n      const imgs = [];\n      let text;\n\n      if (currentNode.children[0].tagName !== 'BR') {\n        const imgElements = currentNode.getElementsByTagName('img');\n\n        if (imgElements) {\n          for (let i = 0; i < imgElements.length; i++) {\n            const img = imgElements[i];\n            imgs.push(img.outerHTML);\n          }\n        } else if (currentNode.textContent) {\n          text = currentNode.textContent;\n        }\n      } // console.log(allImgs[i].width, imgMaxWidth)\n\n    }\n\n    console.log(nodes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Component, {\n    contentEditable: true,\n    onInput: e => {\n      handleChange(e);\n      onInput(e);\n    },\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContentEditable;\nexport default ContentEditable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentEditable\");","map":{"version":3,"names":["React","ContentEditable","component","onContentChange","onInput","other","Component","handleChange","e","imgMaxWidth","currentTarget","clientWidth","nodes","getElementsByTagName","parsedNodes","i","length","currentNode","imgs","text","children","tagName","imgElements","img","push","outerHTML","textContent","console","log"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/ContentEditable/ContentEditable.tsx"],"sourcesContent":["import React, { FC, ReactNode } from 'react';\nimport { Type } from 'typescript';\n\ntype IContentEditableProps<T extends React.ElementType> = {\n  component?: T;\n  onContentChange?: (event: ReactNode[]) => void;\n} & React.ComponentPropsWithoutRef<T>;\n\nconst ContentEditable = <T extends React.ElementType = 'div',>({ component, onContentChange, onInput = () => {}, ...other }: IContentEditableProps<T>) => {\n  const Component = component || 'div';\n\n  const handleChange = (e: React.FormEvent<HTMLDivElement>) => {\n    const imgMaxWidth = e.currentTarget.clientWidth - 30;\n    // const firstText;\n    const nodes = e.currentTarget.getElementsByTagName('div');\n    let parsedNodes: string[] = [];\n\n    for (let i = 0; i < nodes.length; i++) {\n      const currentNode = nodes[i];\n      const imgs: string[] = [];\n      let text: string;\n\n      if (currentNode.children[0].tagName !== 'BR') {\n        const imgElements = currentNode.getElementsByTagName('img');\n        if (imgElements) {\n          for (let i = 0; i < imgElements.length; i++) {\n            const img = imgElements[i];\n            imgs.push(img.outerHTML);\n          }\n        } else if (currentNode.textContent) {\n          text = currentNode.textContent;\n        }\n\n      }\n\n\n      \n      // console.log(allImgs[i].width, imgMaxWidth)\n    }\n    console.log(nodes);\n  }\n\n  return (\n    <Component\n      contentEditable\n      onInput={(e) => {handleChange(e); onInput(e)}}\n      {...other}\n    />\n  )\n};\n\nexport default ContentEditable;"],"mappings":";AAAA,OAAOA,KAAP,MAAqC,OAArC;;;AAQA,MAAMC,eAAe,GAAG,QAAkI;EAAA,IAA3F;IAAEC,SAAF;IAAaC,eAAb;IAA8BC,OAAO,GAAG,MAAM,CAAE,CAAhD;IAAkD,GAAGC;EAArD,CAA2F;EACxJ,MAAMC,SAAS,GAAGJ,SAAS,IAAI,KAA/B;;EAEA,MAAMK,YAAY,GAAIC,CAAD,IAAwC;IAC3D,MAAMC,WAAW,GAAGD,CAAC,CAACE,aAAF,CAAgBC,WAAhB,GAA8B,EAAlD,CAD2D,CAE3D;;IACA,MAAMC,KAAK,GAAGJ,CAAC,CAACE,aAAF,CAAgBG,oBAAhB,CAAqC,KAArC,CAAd;IACA,IAAIC,WAAqB,GAAG,EAA5B;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,KAAK,CAACI,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MACrC,MAAME,WAAW,GAAGL,KAAK,CAACG,CAAD,CAAzB;MACA,MAAMG,IAAc,GAAG,EAAvB;MACA,IAAIC,IAAJ;;MAEA,IAAIF,WAAW,CAACG,QAAZ,CAAqB,CAArB,EAAwBC,OAAxB,KAAoC,IAAxC,EAA8C;QAC5C,MAAMC,WAAW,GAAGL,WAAW,CAACJ,oBAAZ,CAAiC,KAAjC,CAApB;;QACA,IAAIS,WAAJ,EAAiB;UACf,KAAK,IAAIP,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGO,WAAW,CAACN,MAAhC,EAAwCD,CAAC,EAAzC,EAA6C;YAC3C,MAAMQ,GAAG,GAAGD,WAAW,CAACP,CAAD,CAAvB;YACAG,IAAI,CAACM,IAAL,CAAUD,GAAG,CAACE,SAAd;UACD;QACF,CALD,MAKO,IAAIR,WAAW,CAACS,WAAhB,EAA6B;UAClCP,IAAI,GAAGF,WAAW,CAACS,WAAnB;QACD;MAEF,CAhBoC,CAoBrC;;IACD;;IACDC,OAAO,CAACC,GAAR,CAAYhB,KAAZ;EACD,CA7BD;;EA+BA,oBACE,QAAC,SAAD;IACE,eAAe,MADjB;IAEE,OAAO,EAAGJ,CAAD,IAAO;MAACD,YAAY,CAACC,CAAD,CAAZ;MAAiBJ,OAAO,CAACI,CAAD,CAAP;IAAW,CAF/C;IAAA,GAGMH;EAHN;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAzCD;;KAAMJ,e;AA2CN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}