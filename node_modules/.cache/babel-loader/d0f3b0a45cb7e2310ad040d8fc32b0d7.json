{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/TextArea.tsx\",\n    _this = this;\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n;\n\nconst TextArea = function () {\n  let sizing = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'large';\n  let icon = arguments.length > 1 ? arguments[1] : undefined;\n  let placeholder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  let withLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  let css = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  let className = arguments.length > 5 ? arguments[5] : undefined;\n  let value = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : '';\n\n  for (var _len = arguments.length, other = new Array(_len > 7 ? _len - 7 : 0), _key = 7; _key < _len; _key++) {\n    other[_key - 7] = arguments[_key];\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    css: [withLabel ? styles.inputWithLabel : styles.inputWithoutLabel, styles.placeholder.base, sizing === 'medium' && styles.placeholder.medium],\n    placeholder: !withLabel ? placeholder : undefined,\n    type: \"text\",\n    onFocus: () => {\n      setIsFocused(true);\n    },\n    onBlur: () => {\n      setIsFocused(false);\n    },\n    ...other,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = TextArea;\nexport default TextArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["TextArea","sizing","icon","placeholder","withLabel","css","className","value","other","styles","inputWithLabel","inputWithoutLabel","base","medium","undefined","setIsFocused"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/TextArea.tsx"],"sourcesContent":["import { FC } from 'react';\n\ninterface ITextAreaProps extends React.HTMLAttributes<HTMLDivElement>{\n  icon?: React.ReactNode,\n  withLabel?: boolean,\n  css?: {},\n  sizing?: 'large' | 'medium',\n  multy?: boolean,\n};\n\nconst TextArea: FC<ITextAreaProps> = (sizing = 'large', icon, placeholder = '', withLabel = true, css = {}, className, value = '', ...other) => {\n  return (\n    <div\n      css={[\n        withLabel ? styles.inputWithLabel : styles.inputWithoutLabel,\n        styles.placeholder.base,\n        sizing === 'medium' && styles.placeholder.medium,\n      ]}\n      placeholder={!withLabel ? placeholder : undefined}\n      type=\"text\"\n      onFocus={() => {setIsFocused(true)}}\n      onBlur={() => {setIsFocused(false)}}\n      {...other}\n    >\n      {value}\n    </div>\n  )\n};\n\nexport default TextArea;"],"mappings":";;;;AAQC;;AAED,MAAMA,QAA4B,GAAG,YAA2G;EAAA,IAA1GC,MAA0G,uEAAjG,OAAiG;EAAA,IAAxFC,IAAwF;EAAA,IAAlFC,WAAkF,uEAApE,EAAoE;EAAA,IAAhEC,SAAgE,uEAApD,IAAoD;EAAA,IAA9CC,GAA8C,uEAAxC,EAAwC;EAAA,IAApCC,SAAoC;EAAA,IAAzBC,KAAyB,uEAAjB,EAAiB;;EAAA,kCAAVC,KAAU;IAAVA,KAAU;EAAA;;EAC9I,oBACE;IACE,GAAG,EAAE,CACHJ,SAAS,GAAGK,MAAM,CAACC,cAAV,GAA2BD,MAAM,CAACE,iBADxC,EAEHF,MAAM,CAACN,WAAP,CAAmBS,IAFhB,EAGHX,MAAM,KAAK,QAAX,IAAuBQ,MAAM,CAACN,WAAP,CAAmBU,MAHvC,CADP;IAME,WAAW,EAAE,CAACT,SAAD,GAAaD,WAAb,GAA2BW,SAN1C;IAOE,IAAI,EAAC,MAPP;IAQE,OAAO,EAAE,MAAM;MAACC,YAAY,CAAC,IAAD,CAAZ;IAAmB,CARrC;IASE,MAAM,EAAE,MAAM;MAACA,YAAY,CAAC,KAAD,CAAZ;IAAoB,CATrC;IAAA,GAUMP,KAVN;IAAA,UAYGD;EAZH;IAAA;IAAA;IAAA;EAAA,SADF;AAgBD,CAjBD;;KAAMP,Q;AAmBN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}