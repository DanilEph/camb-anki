{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/ContentEditable/ContentEditable.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContentEditable = _ref => {\n  let {\n    component,\n    onContentChange,\n    onInput = () => {},\n    ...other\n  } = _ref;\n  const Component = component || 'div';\n\n  const handleChange = e => {\n    const inputWidth = e.currentTarget.clientWidth;\n    const innerHTML = e.currentTarget.innerHTML;\n    const allImgs = e.currentTarget.getElementsByTagName('img');\n\n    for (let i = 0; i < allImgs.length; i++) {\n      allImgs[i].width = inputWidth - 22;\n    }\n\n    console.log(allImgs);\n    console.log(innerHTML);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Component, {\n    contentEditable: true,\n    onInput: e => {\n      handleChange(e);\n      onInput(e);\n    },\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContentEditable;\nexport default ContentEditable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentEditable\");","map":{"version":3,"names":["React","ContentEditable","component","onContentChange","onInput","other","Component","handleChange","e","inputWidth","currentTarget","clientWidth","innerHTML","allImgs","getElementsByTagName","i","length","width","console","log"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/ContentEditable/ContentEditable.tsx"],"sourcesContent":["import React, { FC, ReactNode } from 'react';\nimport { Type } from 'typescript';\n\ntype IContentEditableProps<T extends React.ElementType> = {\n  component?: T;\n  onContentChange?: (event: ReactNode[]) => void;\n} & React.ComponentPropsWithoutRef<T>;\n\nconst ContentEditable = <T extends React.ElementType = 'div',>({ component, onContentChange, onInput = () => {}, ...other }: IContentEditableProps<T>) => {\n  const Component = component || 'div';\n\n  const handleChange = (e: React.FormEvent<HTMLDivElement>) => {\n    const inputWidth = e.currentTarget.clientWidth;\n    const innerHTML = e.currentTarget.innerHTML;\n    const allImgs = e.currentTarget.getElementsByTagName('img');\n    for (let i = 0; i < allImgs.length; i++) {\n      allImgs[i].width = inputWidth - 22;\n    }\n    console.log(allImgs);\n    console.log(innerHTML);\n  }\n\n  return (\n    <Component\n      contentEditable\n      onInput={(e) => {handleChange(e); onInput(e)}}\n      {...other}\n    />\n  )\n};\n\nexport default ContentEditable;"],"mappings":";AAAA,OAAOA,KAAP,MAAqC,OAArC;;;AAQA,MAAMC,eAAe,GAAG,QAAkI;EAAA,IAA3F;IAAEC,SAAF;IAAaC,eAAb;IAA8BC,OAAO,GAAG,MAAM,CAAE,CAAhD;IAAkD,GAAGC;EAArD,CAA2F;EACxJ,MAAMC,SAAS,GAAGJ,SAAS,IAAI,KAA/B;;EAEA,MAAMK,YAAY,GAAIC,CAAD,IAAwC;IAC3D,MAAMC,UAAU,GAAGD,CAAC,CAACE,aAAF,CAAgBC,WAAnC;IACA,MAAMC,SAAS,GAAGJ,CAAC,CAACE,aAAF,CAAgBE,SAAlC;IACA,MAAMC,OAAO,GAAGL,CAAC,CAACE,aAAF,CAAgBI,oBAAhB,CAAqC,KAArC,CAAhB;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,OAAO,CAACG,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;MACvCF,OAAO,CAACE,CAAD,CAAP,CAAWE,KAAX,GAAmBR,UAAU,GAAG,EAAhC;IACD;;IACDS,OAAO,CAACC,GAAR,CAAYN,OAAZ;IACAK,OAAO,CAACC,GAAR,CAAYP,SAAZ;EACD,CATD;;EAWA,oBACE,QAAC,SAAD;IACE,eAAe,MADjB;IAEE,OAAO,EAAGJ,CAAD,IAAO;MAACD,YAAY,CAACC,CAAD,CAAZ;MAAiBJ,OAAO,CAACI,CAAD,CAAP;IAAW,CAF/C;IAAA,GAGMH;EAHN;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CArBD;;KAAMJ,e;AAuBN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}