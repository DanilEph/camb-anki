{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/TextArea.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { useRef, useState } from 'react';\nimport { styles } from './Input';\nimport Label from './Label';\nimport { ContentEditable } from 'components/ContentEditable';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n;\n\nconst TextArea = _ref => {\n  _s();\n\n  let {\n    sizing = 'large',\n    icon,\n    placeholder = '',\n    withLabel = true,\n    css = {},\n    className,\n    contentValue,\n    ...other\n  } = _ref;\n  const [isFocused, setIsFocused] = useState(false);\n  const refInput = useRef(null); // useEffect(() => {\n  //   if (refInput.current) {\n  //     refInput.current.textContent = children;\n  //   }\n  // })\n\n  return _jsxDEV(\"div\", {\n    css: [styles.base, styles[sizing], css],\n    className: className,\n    children: [icon != null && icon, placeholder !== '' && _jsxDEV(Label, {\n      isLabel: isFocused || (contentValue === null || contentValue === void 0 ? void 0 : contentValue.length) !== 0 || contentValue !== undefined,\n      placeholderOnly: !withLabel,\n      children: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), _jsxDEV(ContentEditable, {\n      className: \"multy-input\",\n      css: [withLabel ? styles.inputWithLabel : styles.inputWithoutLabel, styles.placeholder.base, sizing === 'medium' && styles.placeholder.medium],\n      placeholder: !withLabel ? placeholder : undefined,\n      onFocus: () => {\n        setIsFocused(true);\n      },\n      onBlur: () => {\n        setIsFocused(false);\n      },\n      contentValue: contentValue,\n      ...other\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TextArea, \"wvPF5d4gwOad04xWgAWSdetg0Dc=\");\n\n_c = TextArea;\nexport default TextArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"names":["useRef","useState","styles","Label","ContentEditable","TextArea","sizing","icon","placeholder","withLabel","css","className","contentValue","other","isFocused","setIsFocused","refInput","base","length","undefined","inputWithLabel","inputWithoutLabel","medium"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Input/TextArea.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { FC, ReactNode, useEffect, useRef, useState } from 'react';\nimport { styles } from './Input';\nimport Label from './Label';\nimport {Editor, EditorState} from 'draft-js';\nimport { ContentEditable } from 'components/ContentEditable';\nimport { IContentEditableProps } from 'components/ContentEditable/ContentEditable';\n\n\ninterface ITextAreaProps extends IContentEditableProps<'div'> {\n  icon?: React.ReactNode,\n  withLabel?: boolean,\n  css?: {},\n  sizing?: 'large' | 'medium',\n  multy?: boolean,\n};\n\nconst TextArea: FC<ITextAreaProps> = ({ sizing = 'large', icon, placeholder = '', withLabel = true, css = {}, className, contentValue, ...other }) => {\n  const [isFocused, setIsFocused] = useState(false);\n  const refInput = useRef<HTMLDivElement>(null);\n\n  // useEffect(() => {\n  //   if (refInput.current) {\n  //     refInput.current.textContent = children;\n  //   }\n  // })\n  \n  return (\n    <div\n    css={[\n      styles.base,\n      styles[sizing],\n      css,\n    ]}\n    className={className}\n   >\n    {icon != null && icon}\n    {placeholder !== '' && (\n      <Label isLabel={isFocused || contentValue?.length !== 0 || contentValue !== undefined} placeholderOnly={!withLabel} >{placeholder}</Label>\n    )}\n      <ContentEditable\n        className='multy-input'\n        css={[\n          withLabel ? styles.inputWithLabel : styles.inputWithoutLabel,\n          styles.placeholder.base,\n          sizing === 'medium' && styles.placeholder.medium,\n        ]}\n        placeholder={!withLabel ? placeholder : undefined}\n        onFocus={() => {setIsFocused(true)}}\n        onBlur={() => {setIsFocused(false)}}\n        contentValue={contentValue}\n        {...other}\n      />\n    </div>\n  )\n};\n\nexport default TextArea;"],"mappings":";;;AAAA;AACA,SAAmCA,MAAnC,EAA2CC,QAA3C,QAA2D,OAA3D;AACA,SAASC,MAAT,QAAuB,SAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,SAASC,eAAT,QAAgC,4BAAhC;;AAUC;;AAED,MAAMC,QAA4B,GAAG,QAAiH;EAAA;;EAAA,IAAhH;IAAEC,MAAM,GAAG,OAAX;IAAoBC,IAApB;IAA0BC,WAAW,GAAG,EAAxC;IAA4CC,SAAS,GAAG,IAAxD;IAA8DC,GAAG,GAAG,EAApE;IAAwEC,SAAxE;IAAmFC,YAAnF;IAAiG,GAAGC;EAApG,CAAgH;EACpJ,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;EACA,MAAMe,QAAQ,GAAGhB,MAAM,CAAiB,IAAjB,CAAvB,CAFoJ,CAIpJ;EACA;EACA;EACA;EACA;;EAEA,OACE;IACA,GAAG,EAAE,CACHE,MAAM,CAACe,IADJ,EAEHf,MAAM,CAACI,MAAD,CAFH,EAGHI,GAHG,CADL;IAMA,SAAS,EAAEC,SANX;IAAA,WAQCJ,IAAI,IAAI,IAAR,IAAgBA,IARjB,EASCC,WAAW,KAAK,EAAhB,IACC,QAAC,KAAD;MAAO,OAAO,EAAEM,SAAS,IAAI,CAAAF,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEM,MAAd,MAAyB,CAAtC,IAA2CN,YAAY,KAAKO,SAA5E;MAAuF,eAAe,EAAE,CAACV,SAAzG;MAAA,UAAsHD;IAAtH;MAAA;MAAA;MAAA;IAAA,QAVF,EAYE,QAAC,eAAD;MACE,SAAS,EAAC,aADZ;MAEE,GAAG,EAAE,CACHC,SAAS,GAAGP,MAAM,CAACkB,cAAV,GAA2BlB,MAAM,CAACmB,iBADxC,EAEHnB,MAAM,CAACM,WAAP,CAAmBS,IAFhB,EAGHX,MAAM,KAAK,QAAX,IAAuBJ,MAAM,CAACM,WAAP,CAAmBc,MAHvC,CAFP;MAOE,WAAW,EAAE,CAACb,SAAD,GAAaD,WAAb,GAA2BW,SAP1C;MAQE,OAAO,EAAE,MAAM;QAACJ,YAAY,CAAC,IAAD,CAAZ;MAAmB,CARrC;MASE,MAAM,EAAE,MAAM;QAACA,YAAY,CAAC,KAAD,CAAZ;MAAoB,CATrC;MAUE,YAAY,EAAEH,YAVhB;MAAA,GAWMC;IAXN;MAAA;MAAA;MAAA;IAAA,QAZF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA4BD,CAtCD;;GAAMR,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}