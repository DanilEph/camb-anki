{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/ContentEditable/ContentEditable.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ContentEditable = _ref => {\n  let {\n    component,\n    onContentChange,\n    onInput = () => {},\n    ...other\n  } = _ref;\n  const Component = component || 'div';\n\n  const handleChange = e => {\n    let parsedNodes = [];\n    const firstText = e.currentTarget.childNodes[0].textContent;\n    const nodes = e.currentTarget.getElementsByTagName('div');\n    const imgMaxWidth = e.currentTarget.clientWidth - 30;\n    firstText && parsedNodes.push(firstText);\n\n    for (let i = 0; i < nodes.length; i++) {\n      var _currentNode$children, _currentNode$children2;\n\n      const currentNode = nodes[i];\n      let img;\n      let text;\n\n      if (((_currentNode$children = currentNode.children[0]) === null || _currentNode$children === void 0 ? void 0 : _currentNode$children.tagName) === 'BR' && currentNode.childElementCount === 1) {\n        continue;\n      } else if (((_currentNode$children2 = currentNode.children[0]) === null || _currentNode$children2 === void 0 ? void 0 : _currentNode$children2.tagName) === 'IMG') {\n        const currentImg = currentNode.getElementsByTagName('img')[0];\n        if ((currentImg === null || currentImg === void 0 ? void 0 : currentImg.width) > imgMaxWidth) currentImg.width = imgMaxWidth;\n        img = currentImg === null || currentImg === void 0 ? void 0 : currentImg.outerHTML; // for (let i = 0; i < imgElements.length; i++) {\n        //   const img = imgElements[i];\n        //   if (img.width > imgMaxWidth) img.width = imgMaxWidth;\n        //   imgs.push(img.outerHTML);\n        // }\n      } else if (currentNode.textContent) {\n        text = currentNode.textContent;\n      }\n\n      img && parsedNodes.push(img);\n      text && parsedNodes.push(text);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Component, {\n    contentEditable: true,\n    onInput: e => {\n      handleChange(e);\n      onInput(e);\n    },\n    ...other\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ContentEditable;\nexport default ContentEditable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContentEditable\");","map":{"version":3,"names":["React","ContentEditable","component","onContentChange","onInput","other","Component","handleChange","e","parsedNodes","firstText","currentTarget","childNodes","textContent","nodes","getElementsByTagName","imgMaxWidth","clientWidth","push","i","length","currentNode","img","text","children","tagName","childElementCount","currentImg","width","outerHTML"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/ContentEditable/ContentEditable.tsx"],"sourcesContent":["import React, { FC, ReactNode } from 'react';\nimport { Type } from 'typescript';\n\ntype IContentEditableProps<T extends React.ElementType> = {\n  component?: T;\n  onContentChange?: (event: ReactNode[]) => void;\n} & React.ComponentPropsWithoutRef<T>;\n\nconst ContentEditable = <T extends React.ElementType = 'div',>({ component, onContentChange, onInput = () => {}, ...other }: IContentEditableProps<T>) => {\n  const Component = component || 'div';\n\n  const handleChange = (e: React.FormEvent<HTMLDivElement>) => {\n    let parsedNodes: string[] = [];\n    const firstText = e.currentTarget.childNodes[0].textContent;\n    const nodes = e.currentTarget.getElementsByTagName('div');\n    const imgMaxWidth = e.currentTarget.clientWidth - 30;\n    \n    firstText && parsedNodes.push(firstText);\n\n    for (let i = 0; i < nodes.length; i++) {\n      const currentNode = nodes[i];\n      let img: string | undefined;\n      let text: string | undefined;\n\n      if (currentNode.children[0]?.tagName === 'BR' && currentNode.childElementCount === 1) {\n        continue;\n      } else if (currentNode.children[0]?.tagName === 'IMG') {\n        const currentImg = currentNode.getElementsByTagName('img')[0];\n        if (currentImg?.width > imgMaxWidth) currentImg.width = imgMaxWidth;\n        img = (currentImg?.outerHTML);\n        // for (let i = 0; i < imgElements.length; i++) {\n        //   const img = imgElements[i];\n        //   if (img.width > imgMaxWidth) img.width = imgMaxWidth;\n        //   imgs.push(img.outerHTML);\n        // }\n      } else if (currentNode.textContent) {\n        text = currentNode.textContent;\n      }\n      img && parsedNodes.push(img);\n      text && parsedNodes.push(text);\n    }\n\n  }\n\n  return (\n    <Component\n      contentEditable\n      onInput={(e) => {handleChange(e); onInput(e)}}\n      {...other}\n    />\n  )\n};\n\nexport default ContentEditable;"],"mappings":";AAAA,OAAOA,KAAP,MAAqC,OAArC;;;AAQA,MAAMC,eAAe,GAAG,QAAkI;EAAA,IAA3F;IAAEC,SAAF;IAAaC,eAAb;IAA8BC,OAAO,GAAG,MAAM,CAAE,CAAhD;IAAkD,GAAGC;EAArD,CAA2F;EACxJ,MAAMC,SAAS,GAAGJ,SAAS,IAAI,KAA/B;;EAEA,MAAMK,YAAY,GAAIC,CAAD,IAAwC;IAC3D,IAAIC,WAAqB,GAAG,EAA5B;IACA,MAAMC,SAAS,GAAGF,CAAC,CAACG,aAAF,CAAgBC,UAAhB,CAA2B,CAA3B,EAA8BC,WAAhD;IACA,MAAMC,KAAK,GAAGN,CAAC,CAACG,aAAF,CAAgBI,oBAAhB,CAAqC,KAArC,CAAd;IACA,MAAMC,WAAW,GAAGR,CAAC,CAACG,aAAF,CAAgBM,WAAhB,GAA8B,EAAlD;IAEAP,SAAS,IAAID,WAAW,CAACS,IAAZ,CAAiBR,SAAjB,CAAb;;IAEA,KAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACM,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;MAAA;;MACrC,MAAME,WAAW,GAAGP,KAAK,CAACK,CAAD,CAAzB;MACA,IAAIG,GAAJ;MACA,IAAIC,IAAJ;;MAEA,IAAI,0BAAAF,WAAW,CAACG,QAAZ,CAAqB,CAArB,iFAAyBC,OAAzB,MAAqC,IAArC,IAA6CJ,WAAW,CAACK,iBAAZ,KAAkC,CAAnF,EAAsF;QACpF;MACD,CAFD,MAEO,IAAI,2BAAAL,WAAW,CAACG,QAAZ,CAAqB,CAArB,mFAAyBC,OAAzB,MAAqC,KAAzC,EAAgD;QACrD,MAAME,UAAU,GAAGN,WAAW,CAACN,oBAAZ,CAAiC,KAAjC,EAAwC,CAAxC,CAAnB;QACA,IAAI,CAAAY,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEC,KAAZ,IAAoBZ,WAAxB,EAAqCW,UAAU,CAACC,KAAX,GAAmBZ,WAAnB;QACrCM,GAAG,GAAIK,UAAJ,aAAIA,UAAJ,uBAAIA,UAAU,CAAEE,SAAnB,CAHqD,CAIrD;QACA;QACA;QACA;QACA;MACD,CATM,MASA,IAAIR,WAAW,CAACR,WAAhB,EAA6B;QAClCU,IAAI,GAAGF,WAAW,CAACR,WAAnB;MACD;;MACDS,GAAG,IAAIb,WAAW,CAACS,IAAZ,CAAiBI,GAAjB,CAAP;MACAC,IAAI,IAAId,WAAW,CAACS,IAAZ,CAAiBK,IAAjB,CAAR;IACD;EAEF,CA/BD;;EAiCA,oBACE,QAAC,SAAD;IACE,eAAe,MADjB;IAEE,OAAO,EAAGf,CAAD,IAAO;MAACD,YAAY,CAACC,CAAD,CAAZ;MAAiBJ,OAAO,CAACI,CAAD,CAAP;IAAW,CAF/C;IAAA,GAGMH;EAHN;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CA3CD;;KAAMJ,e;AA6CN,eAAeA,eAAf"},"metadata":{},"sourceType":"module"}