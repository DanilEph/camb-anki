{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Search/Search.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Button from 'components/UI/Button/Button';\nimport { Input } from 'components/UI/Input';\nimport Space from 'components/UI/Space/Space';\nimport { useAxios } from 'hooks/useAxios';\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport { PulseLoader } from 'react-spinners';\nimport { useRecoilState } from 'recoil';\nimport { searchWord } from 'services/cambParser';\nimport { isSearchingState } from 'store/atoms/isSearchingState';\nimport { searchErrorState } from 'store/atoms/searchErrorState';\nimport { searchingWordState } from 'store/atoms/searchingWordState';\nimport { wordDataState } from 'store/atoms/wordDataState';\nimport { theme } from 'utils/theme';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n;\nconst styles = {\n  root: {\n    base: css({\n      position: 'relative'\n    })\n  },\n  input: {\n    base: _ref => {\n      let {\n        buttonWidth\n      } = _ref;\n      return css({\n        flexGrow: 1,\n        '> input': {\n          paddingRight: buttonWidth + 15\n        }\n      });\n    }\n  },\n  button: {\n    base: css({\n      position: 'absolute',\n      zIndex: 2,\n      right: 0,\n      // borderRadius: '0 12px 12px 0',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0\n    })\n  }\n};\n\nconst Search = _ref2 => {\n  _s();\n\n  let {\n    small = false,\n    ...other\n  } = _ref2;\n  const [buttonWidth, setButtonWidth] = useState(0);\n  const [searchWordRequest, {\n    data,\n    loading,\n    error\n  }] = useAxios(searchWord);\n  const [searchingWord, setSearchingWord] = useRecoilState(searchingWordState);\n  const [wordData, setWordData] = useRecoilState(wordDataState);\n  const [isSearching, setIsSearching] = useRecoilState(isSearchingState);\n  const [searchError, setSearchError] = useRecoilState(searchErrorState);\n  useLayoutEffect(() => {\n    const searchButton = document.querySelector('.search-button');\n\n    if (searchButton) {\n      setButtonWidth(Number(searchButton.offsetWidth));\n    }\n  }, []);\n  useEffect(() => {\n    if (data) {\n      setSearchError(undefined);\n      setWordData(data);\n      const main = document.querySelector('main');\n      main === null || main === void 0 ? void 0 : main.scrollTo(0, 0);\n    }\n  }, [data]);\n  useEffect(() => {\n    setIsSearching(loading);\n  }, [loading]);\n  useEffect(() => {\n    if (error) {\n      setWordData(undefined);\n      setSearchError(error);\n    }\n  }, [error]);\n\n  const searchHandler = () => {\n    if (searchingWord !== '') {\n      const res = searchWordRequest({\n        word: searchingWord\n      });\n    }\n  };\n\n  const inputHandler = e => {\n    setSearchingWord(e.currentTarget.value);\n  };\n\n  const engterDownHandler = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      searchHandler();\n    }\n  };\n\n  return _jsxDEV(Space, {\n    css: [styles.root.base],\n    ...other,\n    children: [_jsxDEV(Input, {\n      placeholder: \"Search for a word...\",\n      withLabel: false,\n      css: [styles.input.base({\n        buttonWidth\n      })],\n      sizing: small ? 'medium' : 'large',\n      onChange: e => inputHandler(e),\n      value: searchingWord,\n      autoFocus: true,\n      onKeyDown: e => engterDownHandler(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), _jsxDEV(Button, {\n      size: small ? 'medium' : 'large',\n      className: 'search-button',\n      css: [styles.button.base],\n      onClick: searchHandler,\n      children: isSearching ? _jsxDEV(PulseLoader, {\n        size: \"6px\",\n        color: theme.palette.secondary.normal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 22\n      }, this) : 'Search'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Search, \"XFWWPRbUUN9+qHIbfBL9fl/m/10=\", false, function () {\n  return [useAxios, useRecoilState, useRecoilState, useRecoilState, useRecoilState];\n});\n\n_c = Search;\nexport default Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["css","Button","Input","Space","useAxios","React","useEffect","useLayoutEffect","useState","PulseLoader","useRecoilState","searchWord","isSearchingState","searchErrorState","searchingWordState","wordDataState","theme","styles","root","base","position","input","buttonWidth","flexGrow","paddingRight","button","zIndex","right","borderTopLeftRadius","borderBottomLeftRadius","Search","small","other","setButtonWidth","searchWordRequest","data","loading","error","searchingWord","setSearchingWord","wordData","setWordData","isSearching","setIsSearching","searchError","setSearchError","searchButton","document","querySelector","Number","offsetWidth","undefined","main","scrollTo","searchHandler","res","word","inputHandler","e","currentTarget","value","engterDownHandler","key","preventDefault","palette","secondary","normal"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/Search/Search.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Button from 'components/UI/Button/Button';\nimport { Input } from 'components/UI/Input';\nimport Space from 'components/UI/Space/Space';\nimport { useAxios } from 'hooks/useAxios';\nimport { WordType } from 'models/WordType';\nimport React, { FC, useEffect, useLayoutEffect, useState } from 'react';\nimport { PulseLoader } from 'react-spinners';\nimport { useRecoilState } from 'recoil';\nimport { searchWord } from 'services/cambParser';\nimport { SearchWordType } from 'services/cambParser/searchWord';\nimport { isSearchingState } from 'store/atoms/isSearchingState';\nimport { searchErrorState } from 'store/atoms/searchErrorState';\nimport { searchingWordState } from 'store/atoms/searchingWordState';\nimport { wordDataState } from 'store/atoms/wordDataState';\nimport { theme } from 'utils/theme';\n\ninterface ISearchProps extends React.HTMLAttributes<HTMLElement> {\n  small?: boolean;\n};\n\nconst styles = {\n  root: {\n    base: css({\n      position: 'relative',\n    })\n  },\n  input: {\n    base: ({ buttonWidth }: {buttonWidth: number}) => css({\n      flexGrow: 1,\n      '> input': {\n        paddingRight: buttonWidth + 15,\n      }\n    })\n  },\n  button: {\n    base: css({\n      position: 'absolute',\n      zIndex: 2,\n      right: 0,\n      // borderRadius: '0 12px 12px 0',\n      borderTopLeftRadius: 0,\n      borderBottomLeftRadius: 0,\n    })\n  }\n}\n\nconst Search: FC<ISearchProps> = ({ small = false, ...other }) => {\n  const [buttonWidth, setButtonWidth] = useState(0);\n  const [searchWordRequest, { data, loading, error }] = useAxios<SearchWordType, WordType[]>(searchWord);\n  const [searchingWord, setSearchingWord] = useRecoilState(searchingWordState);\n  const [wordData, setWordData] = useRecoilState(wordDataState);\n  const [isSearching, setIsSearching] = useRecoilState(isSearchingState);\n  const [searchError, setSearchError] = useRecoilState(searchErrorState);\n\n  useLayoutEffect(() => {\n    const searchButton = document.querySelector<HTMLButtonElement>('.search-button');\n    \n    if (searchButton) {\n      setButtonWidth(Number(searchButton.offsetWidth));\n    }\n\n  }, []);\n\n  useEffect(() => {\n    if (data) {\n      setSearchError(undefined);\n      setWordData(data);\n      const main = document.querySelector('main');\n      main?.scrollTo(0,0);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    setIsSearching(loading);\n  }, [loading])\n\n  useEffect(() => {\n    if (error) {\n      setWordData(undefined);\n      setSearchError(error);\n    }\n  }, [error])\n\n  const searchHandler = () => {\n    if (searchingWord !== '') {\n      const res = searchWordRequest({word: searchingWord});\n    }\n  }\n\n  const inputHandler = (e: React.FormEvent<HTMLInputElement>) => {\n    setSearchingWord(e.currentTarget.value);\n  }\n\n  const engterDownHandler = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      searchHandler();\n    }\n  }\n\n  return (\n    <Space\n      css={[styles.root.base]}\n      {...other}\n    >\n    <Input \n      placeholder='Search for a word...' \n      withLabel={false}\n      css={[styles.input.base({buttonWidth})]}\n      sizing={small ? 'medium' : 'large'}\n      onChange={(e) => inputHandler(e)}\n      value={searchingWord}\n      autoFocus\n      onKeyDown={(e) => engterDownHandler(e)}\n    />\n    <Button\n      size={small ? 'medium' : 'large'}\n      className={'search-button'} \n      css={[styles.button.base]}\n      onClick={searchHandler}\n    >\n      {isSearching ? <PulseLoader size=\"6px\" color={theme.palette.secondary.normal} /> : 'Search'}\n    </Button>\n  </Space>\n  )\n};\n\nexport default Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}