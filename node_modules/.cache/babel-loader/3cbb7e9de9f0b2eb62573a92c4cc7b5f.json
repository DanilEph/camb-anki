{"ast":null,"code":"import _slicedToArray from\"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";/** @jsxImportSource @emotion/react */import{css}from'@emotion/react';import Button from'components/UI/Button/Button';import{Input}from'components/UI/Input';import{Select}from'components/UI/Select';import React,{useEffect,useState}from'react';import{useRecoilState}from'recoil';import{selectedDefinitionSelector}from'store/selectedDefinition';import{theme}from'utils/theme';import{jsx as _jsx}from\"@emotion/react/jsx-runtime\";import{jsxs as _jsxs}from\"@emotion/react/jsx-runtime\";;var styles={root:{base:css({display:'flex',flexDirection:'column',gap:'10px','& > *':{}})},buttonGroup:{base:css({display:'flex',alignItems:'center',gap:'10px',justifyContent:'center'})},button:{clean:css({// background: theme.palette.primary.normal\nflexGrow:1}),submit:css({background:theme.palette.primary.lightest,flexGrow:1})},selectGroup:{base:css({display:'flex',alignItems:'center',gap:'10px',justifyContent:'center',flexDirection:'column','& > *':{width:'100%'},marginBottom:'20px'})}};var AddPage=function AddPage(){var _useRecoilState=useRecoilState(selectedDefinitionSelector),_useRecoilState2=_slicedToArray(_useRecoilState,2),selectedDefinition=_useRecoilState2[0],setSelectedDefinition=_useRecoilState2[1];var _useState=useState(),_useState2=_slicedToArray(_useState,2),word=_useState2[0],setWord=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),meaning=_useState4[0],setMeaning=_useState4[1];var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),example=_useState6[0],setExample=_useState6[1];var _useState7=useState(),_useState8=_slicedToArray(_useState7,2),image=_useState8[0],setImage=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),noteType=_useState10[0],setNoteType=_useState10[1];var handleClean=function handleClean(){setWord(undefined);setMeaning(undefined);setExample(undefined);setImage(undefined);};var options=[{id:'1',name:'One'},{id:'2',name:'Two'},{id:'3',name:'Tree'}];useEffect(function(){if(selectedDefinition.word)setWord([selectedDefinition.word]);if(selectedDefinition.definition)setMeaning([selectedDefinition.definition]);if(selectedDefinition.example)setExample([selectedDefinition.example]);},[selectedDefinition]);return _jsxs(\"div\",{css:styles.root.base,children:[_jsxs(\"div\",{css:styles.selectGroup.base,children:[_jsx(Select,{placeholder:\"Card type\",options:options,value:noteType,onChangeValue:function onChangeValue(newValue){setNoteType(newValue);}}),_jsx(Select,{placeholder:\"Deck\",options:options,value:noteType,onChangeValue:function onChangeValue(newValue){setNoteType(newValue);}})]}),_jsxs(\"div\",{css:styles.selectGroup.base,children:[_jsx(Input.TextArea,{sizing:\"large\",placeholder:\"Word\",onContentChange:function onContentChange(nodes){setWord(nodes);},contentValue:word}),_jsx(Input.TextArea,{sizing:\"large\",placeholder:\"Meaning\",onContentChange:function onContentChange(nodes){setMeaning(nodes);},contentValue:meaning}),_jsx(Input.TextArea,{sizing:\"large\",placeholder:\"Example\",onContentChange:function onContentChange(nodes){setExample(nodes);},contentValue:example}),_jsx(Input.TextArea,{sizing:\"large\",placeholder:\"Image\",onContentChange:function onContentChange(nodes){setImage(nodes);},contentValue:image})]}),_jsxs(\"div\",{css:styles.buttonGroup.base,children:[_jsx(Button,{css:styles.button.clean,outline:true,onClick:function onClick(){return handleClean();},children:\"Clean\"}),_jsx(Button,{css:styles.button.submit,children:\"Add card\"})]})]});};export default AddPage;","map":{"version":3,"names":["css","Button","Input","Select","React","useEffect","useState","useRecoilState","selectedDefinitionSelector","theme","styles","root","base","display","flexDirection","gap","buttonGroup","alignItems","justifyContent","button","clean","flexGrow","submit","background","palette","primary","lightest","selectGroup","width","marginBottom","AddPage","selectedDefinition","setSelectedDefinition","word","setWord","meaning","setMeaning","example","setExample","image","setImage","noteType","setNoteType","handleClean","undefined","options","id","name","definition","newValue","nodes"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AddPage/AddPage.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ContentEditable } from 'components/ContentEditable';\nimport Button from 'components/UI/Button/Button';\nimport { Input } from 'components/UI/Input';\nimport { Select } from 'components/UI/Select';\nimport React, { FC, ReactNode, useEffect, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { currentTabSelector } from 'store/currentTab';\nimport { selectedDefinitionSelector } from 'store/selectedDefinition';\nimport { ALL_TABS } from 'utils/tabs';\nimport { theme } from 'utils/theme';\n\ninterface IAddPageProps {\n\n};\n\nconst styles = {\n  root: {\n    base: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '10px',\n      '& > *': {\n        \n      }\n    })\n  },\n  buttonGroup: {\n    base: css({\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      justifyContent: 'center',\n    })\n  },\n  button: {\n    clean: css({\n      // background: theme.palette.primary.normal\n      flexGrow: 1,\n    }),\n    submit: css({\n      background: theme.palette.primary.lightest,\n      flexGrow: 1,\n    })\n  },\n  selectGroup: {\n    base: css({\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      '& > *': {\n        width: '100%',\n      },\n      marginBottom: '20px',\n    })\n  }\n}\n\nconst AddPage: FC<IAddPageProps> = () => {\n  const [ selectedDefinition, setSelectedDefinition ] = useRecoilState(selectedDefinitionSelector);\n  const [word, setWord] = useState<string[]>();\n  const [meaning, setMeaning] = useState<string[]>();\n  const [example, setExample] = useState<string[]>();\n  const [image, setImage] = useState<string[]>();\n\n  const [noteType, setNoteType] = useState<string>();\n\n  const handleClean = () => {\n    setWord(undefined);\n    setMeaning(undefined);\n    setExample(undefined);\n    setImage(undefined);\n  }\n\n  const options = [\n    {id: '1', name: 'One'},\n    {id: '2', name: 'Two'},\n    {id: '3', name: 'Tree'}\n  ]\n\n  useEffect(() => {\n    if (selectedDefinition.word) setWord([selectedDefinition.word]);\n    if (selectedDefinition.definition) setMeaning([selectedDefinition.definition]);\n    if (selectedDefinition.example) setExample([selectedDefinition.example]);\n  }, [selectedDefinition])\n\n  return (\n    <div css={styles.root.base}>\n      <div css={styles.selectGroup.base}>\n        <Select placeholder='Card type' options={options} value={noteType} onChangeValue={(newValue) => {setNoteType(newValue)}} />\n        <Select placeholder='Deck' options={options} value={noteType} onChangeValue={(newValue) => {setNoteType(newValue)}} />\n      </div>\n      <div css={styles.selectGroup.base}>\n        <Input.TextArea\n          sizing='large'   \n          placeholder='Word'\n          onContentChange={(nodes) => {setWord(nodes)}} \n          contentValue={word}\n        />\n        <Input.TextArea\n          sizing='large'   \n          placeholder='Meaning'\n          onContentChange={(nodes) => {setMeaning(nodes)}} \n          contentValue={meaning}\n        />\n        <Input.TextArea\n          sizing='large'   \n          placeholder='Example'\n          onContentChange={(nodes) => {setExample(nodes)}} \n          contentValue={example}\n        />\n        <Input.TextArea\n          sizing='large'   \n          placeholder='Image'\n          onContentChange={(nodes) => {setImage(nodes)}} \n          contentValue={image}\n        />\n      </div>\n      <div css={styles.buttonGroup.base}>\n        <Button css={styles.button.clean} outline onClick={() => handleClean()} >Clean</Button>\n        <Button css={styles.button.submit}>Add card</Button>\n      </div>\n    </div>\n  )\n};\n\nexport default AddPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}