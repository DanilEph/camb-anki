{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AddPage/AddPage.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Button from 'components/UI/Button/Button';\nimport { Input } from 'components/UI/Input';\nimport { Select } from 'components/UI/Select';\nimport React, { useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { selectedDefinitionSelector } from 'store/selectedDefinition';\nimport { theme } from 'utils/theme';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n;\nconst styles = {\n  root: {\n    base: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '10px',\n      '& > *': {}\n    })\n  },\n  buttonGroup: {\n    base: css({\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      justifyContent: 'center'\n    })\n  },\n  button: {\n    clean: css({\n      // background: theme.palette.primary.normal\n      flexGrow: 1\n    }),\n    submit: css({\n      background: theme.palette.primary.lightest,\n      flexGrow: 1\n    })\n  },\n  selectGroup: {\n    base: css({\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      '& > *': {\n        width: '100%'\n      },\n      marginBottom: '20px'\n    })\n  }\n};\n\nconst AddPage = () => {\n  _s();\n\n  const [selectedDefinition] = useRecoilState(selectedDefinitionSelector);\n  const [word, setWord] = useState(selectedDefinition.word ? [selectedDefinition.word] : undefined);\n  const [meaning, setMeaning] = useState();\n  const [example, setExample] = useState();\n  const [image, setImage] = useState();\n  const [noteType, setNoteType] = useState();\n\n  const handleClean = () => {\n    setWord(undefined);\n    setMeaning(undefined);\n    setExample(undefined);\n    setImage(undefined);\n  };\n\n  const options = [{\n    id: '1',\n    name: 'One'\n  }, {\n    id: '2',\n    name: 'Two'\n  }, {\n    id: '3',\n    name: 'Tree'\n  }];\n  return _jsxDEV(\"div\", {\n    css: styles.root.base,\n    children: [_jsxDEV(\"div\", {\n      css: styles.selectGroup.base,\n      children: [_jsxDEV(Select, {\n        placeholder: \"Card type\",\n        options: options,\n        value: noteType,\n        onChangeValue: newValue => {\n          setNoteType(newValue);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), _jsxDEV(Select, {\n        placeholder: \"Deck\",\n        options: options,\n        value: noteType,\n        onChangeValue: newValue => {\n          setNoteType(newValue);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: styles.selectGroup.base,\n      children: [_jsxDEV(Input.TextArea, {\n        sizing: \"large\",\n        placeholder: \"Word\",\n        onContentChange: nodes => {\n          setWord(nodes);\n        },\n        contentValue: word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), _jsxDEV(Input.TextArea, {\n        sizing: \"large\",\n        placeholder: \"Meaning\",\n        onContentChange: nodes => {\n          setMeaning(nodes);\n        },\n        contentValue: meaning\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), _jsxDEV(Input.TextArea, {\n        sizing: \"large\",\n        placeholder: \"Example\",\n        onContentChange: nodes => {\n          setExample(nodes);\n        },\n        contentValue: example\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), _jsxDEV(Input.TextArea, {\n        sizing: \"large\",\n        placeholder: \"Image\",\n        onContentChange: nodes => {\n          setImage(nodes);\n        },\n        contentValue: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: styles.buttonGroup.base,\n      children: [_jsxDEV(Button, {\n        css: styles.button.clean,\n        outline: true,\n        onClick: () => handleClean(),\n        children: \"Clean\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        css: styles.button.submit,\n        children: \"Add card\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPage, \"tAJ3qxpeWs4tb+tXdapvA23KHTs=\", false, function () {\n  return [useRecoilState];\n});\n\n_c = AddPage;\nexport default AddPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPage\");","map":{"version":3,"names":["css","Button","Input","Select","React","useState","useRecoilState","selectedDefinitionSelector","theme","styles","root","base","display","flexDirection","gap","buttonGroup","alignItems","justifyContent","button","clean","flexGrow","submit","background","palette","primary","lightest","selectGroup","width","marginBottom","AddPage","selectedDefinition","word","setWord","undefined","meaning","setMeaning","example","setExample","image","setImage","noteType","setNoteType","handleClean","options","id","name","newValue","nodes"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AddPage/AddPage.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ContentEditable } from 'components/ContentEditable';\nimport Button from 'components/UI/Button/Button';\nimport { Input } from 'components/UI/Input';\nimport { Select } from 'components/UI/Select';\nimport React, { FC, ReactNode, useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { selectedDefinitionSelector } from 'store/selectedDefinition';\nimport { theme } from 'utils/theme';\n\ninterface IAddPageProps {\n\n};\n\nconst styles = {\n  root: {\n    base: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '10px',\n      '& > *': {\n        \n      }\n    })\n  },\n  buttonGroup: {\n    base: css({\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      justifyContent: 'center',\n    })\n  },\n  button: {\n    clean: css({\n      // background: theme.palette.primary.normal\n      flexGrow: 1,\n    }),\n    submit: css({\n      background: theme.palette.primary.lightest,\n      flexGrow: 1,\n    })\n  },\n  selectGroup: {\n    base: css({\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      '& > *': {\n        width: '100%',\n      },\n      marginBottom: '20px',\n    })\n  }\n}\n\nconst AddPage: FC<IAddPageProps> = () => {\n  const [ selectedDefinition ] = useRecoilState(selectedDefinitionSelector);\n  const [word, setWord] = useState<string[] | undefined>(selectedDefinition.word ?[selectedDefinition.word] : undefined);\n  const [meaning, setMeaning] = useState<string[]>();\n  const [example, setExample] = useState<string[]>();\n  const [image, setImage] = useState<string[]>();\n\n  const [noteType, setNoteType] = useState<string>();\n\n  const handleClean = () => {\n    setWord(undefined);\n    setMeaning(undefined);\n    setExample(undefined);\n    setImage(undefined);\n  }\n\n  const options = [\n    {id: '1', name: 'One'},\n    {id: '2', name: 'Two'},\n    {id: '3', name: 'Tree'}\n  ]\n\n  return (\n    <div css={styles.root.base}>\n      <div css={styles.selectGroup.base}>\n        <Select placeholder='Card type' options={options} value={noteType} onChangeValue={(newValue) => {setNoteType(newValue)}} />\n        <Select placeholder='Deck' options={options} value={noteType} onChangeValue={(newValue) => {setNoteType(newValue)}} />\n      </div>\n      <div css={styles.selectGroup.base}>\n        <Input.TextArea\n          sizing='large'   \n          placeholder='Word'\n          onContentChange={(nodes) => {setWord(nodes)}} \n          contentValue={word}\n        />\n        <Input.TextArea\n          sizing='large'   \n          placeholder='Meaning'\n          onContentChange={(nodes) => {setMeaning(nodes)}} \n          contentValue={meaning}\n        />\n        <Input.TextArea\n          sizing='large'   \n          placeholder='Example'\n          onContentChange={(nodes) => {setExample(nodes)}} \n          contentValue={example}\n        />\n        <Input.TextArea\n          sizing='large'   \n          placeholder='Image'\n          onContentChange={(nodes) => {setImage(nodes)}} \n          contentValue={image}\n        />\n      </div>\n      <div css={styles.buttonGroup.base}>\n        <Button css={styles.button.clean} outline onClick={() => handleClean()} >Clean</Button>\n        <Button css={styles.button.submit}>Add card</Button>\n      </div>\n    </div>\n  )\n};\n\nexport default AddPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}