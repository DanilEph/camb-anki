{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Select/Select.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useEffect, useRef, useState } from 'react';\nimport { theme } from 'utils/theme';\nimport { Input } from '../Input';\nimport Option from './Option';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n;\nconst styles = {\n  root: {\n    base: css({\n      position: 'relative'\n    })\n  },\n  menu: {\n    base: css({\n      background: theme.palette.secondary.darker,\n      borderRadius: '12px',\n      fontSize: '14px',\n      marginTop: '10px',\n      boxShadow: '0px 0px 4px 0px rgba(34, 60, 80, 0.2)',\n      position: 'absolute',\n      zIndex: '5',\n      width: '100%'\n    }),\n    hidden: css({\n      display: 'none'\n    })\n  }\n};\n\nconst Select = _ref => {\n  _s();\n\n  let {\n    options,\n    value,\n    onChangeValue = () => {},\n    ...other\n  } = _ref;\n  const [isOpened, setIsOpened] = useState(false);\n  const menuRef = useRef(null);\n  useEffect(() => {\n    document.addEventListener();\n  });\n\n  const getNameById = id => {\n    var _options$find;\n\n    return (_options$find = options.find(elem => elem.id === id)) === null || _options$find === void 0 ? void 0 : _options$find.name;\n  };\n\n  return _jsxDEV(\"div\", {\n    css: styles.root.base,\n    ...other,\n    children: [_jsxDEV(Input, {\n      placeholder: \"Card type\",\n      value: getNameById(value),\n      onClick: () => setIsOpened(true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      ref: menuRef,\n      css: [styles.menu.base, !isOpened && styles.menu.hidden],\n      children: options.map(option => _jsxDEV(Option, {\n        id: option.id,\n        isChecked: value === option.id,\n        onClick: () => {\n          onChangeValue(option.id);\n          setIsOpened(false);\n        },\n        children: option.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Select, \"xXPjvJnEUIbxurLrkP8ND84X3r8=\");\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["css","useEffect","useRef","useState","theme","Input","Option","styles","root","base","position","menu","background","palette","secondary","darker","borderRadius","fontSize","marginTop","boxShadow","zIndex","width","hidden","display","Select","options","value","onChangeValue","other","isOpened","setIsOpened","menuRef","document","addEventListener","getNameById","id","find","elem","name","map","option"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Select/Select.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { createContext, FC, useEffect, useRef, useState } from 'react';\nimport { theme } from 'utils/theme';\nimport { Input } from '../Input';\nimport Option from './Option';\n\ninterface OptionType {\n  id: string,\n  name: string,\n}\n\ninterface ISelectProps extends React.HTMLAttributes<HTMLDivElement> {\n  options: OptionType[],\n  value?: string | undefined,\n  onChangeValue?: (newValue: string) => void,\n};\n\nconst styles = {\n  root: {\n    base: css({\n      position: 'relative',\n    })\n  },\n  menu: {\n    base: css({\n      background: theme.palette.secondary.darker,\n      borderRadius: '12px',\n      fontSize: '14px',\n      marginTop: '10px',\n      boxShadow: '0px 0px 4px 0px rgba(34, 60, 80, 0.2)',\n      position: 'absolute',\n      zIndex: '5',\n      width: '100%',\n    }),\n    hidden: css({\n      display: 'none',\n    })\n  }\n}\n\nconst Select: FC<ISelectProps> = ({ options, value, onChangeValue = () => {}, ...other }) => {\n  const [isOpened, setIsOpened] = useState(false);\n  const menuRef = useRef<HTMLDivElement>(null); \n\n  useEffect(() => {\n    document.addEventListener()\n  });\n\n  const getNameById = (id: string | undefined) => {\n    return options.find((elem) => elem.id === id)?.name;\n  }\n\n  return (\n    <div\n      css={styles.root.base}\n      {...other}\n    >\n      <Input placeholder='Card type' value={getNameById(value)} onClick={() => setIsOpened(true)} />\n      <div\n        ref={menuRef}\n        css={[\n          styles.menu.base,\n          !isOpened && styles.menu.hidden,\n        ]}\n      >\n        {options.map((option) => (\n          <Option id={option.id} isChecked={value === option.id} onClick={() => {onChangeValue(option.id); setIsOpened(false)}}>{option.name}</Option>\n        ))}\n      </div>\n    </div>\n  )\n};\n\nexport default Select;"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,SAA4BC,SAA5B,EAAuCC,MAAvC,EAA+CC,QAA/C,QAA+D,OAA/D;AACA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAWC;AAED,MAAMC,MAAM,GAAG;EACbC,IAAI,EAAE;IACJC,IAAI,EAAET,GAAG,CAAC;MACRU,QAAQ,EAAE;IADF,CAAD;EADL,CADO;EAMbC,IAAI,EAAE;IACJF,IAAI,EAAET,GAAG,CAAC;MACRY,UAAU,EAAER,KAAK,CAACS,OAAN,CAAcC,SAAd,CAAwBC,MAD5B;MAERC,YAAY,EAAE,MAFN;MAGRC,QAAQ,EAAE,MAHF;MAIRC,SAAS,EAAE,MAJH;MAKRC,SAAS,EAAE,uCALH;MAMRT,QAAQ,EAAE,UANF;MAORU,MAAM,EAAE,GAPA;MAQRC,KAAK,EAAE;IARC,CAAD,CADL;IAWJC,MAAM,EAAEtB,GAAG,CAAC;MACVuB,OAAO,EAAE;IADC,CAAD;EAXP;AANO,CAAf;;AAuBA,MAAMC,MAAwB,GAAG,QAA4D;EAAA;;EAAA,IAA3D;IAAEC,OAAF;IAAWC,KAAX;IAAkBC,aAAa,GAAG,MAAM,CAAE,CAA1C;IAA4C,GAAGC;EAA/C,CAA2D;EAC3F,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM4B,OAAO,GAAG7B,MAAM,CAAiB,IAAjB,CAAtB;EAEAD,SAAS,CAAC,MAAM;IACd+B,QAAQ,CAACC,gBAAT;EACD,CAFQ,CAAT;;EAIA,MAAMC,WAAW,GAAIC,EAAD,IAA4B;IAAA;;IAC9C,wBAAOV,OAAO,CAACW,IAAR,CAAcC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAP,kDAAO,cAAwCG,IAA/C;EACD,CAFD;;EAIA,OACE;IACE,GAAG,EAAE/B,MAAM,CAACC,IAAP,CAAYC,IADnB;IAAA,GAEMmB,KAFN;IAAA,WAIE,QAAC,KAAD;MAAO,WAAW,EAAC,WAAnB;MAA+B,KAAK,EAAEM,WAAW,CAACR,KAAD,CAAjD;MAA0D,OAAO,EAAE,MAAMI,WAAW,CAAC,IAAD;IAApF;MAAA;MAAA;MAAA;IAAA,QAJF,EAKE;MACE,GAAG,EAAEC,OADP;MAEE,GAAG,EAAE,CACHxB,MAAM,CAACI,IAAP,CAAYF,IADT,EAEH,CAACoB,QAAD,IAAatB,MAAM,CAACI,IAAP,CAAYW,MAFtB,CAFP;MAAA,UAOGG,OAAO,CAACc,GAAR,CAAaC,MAAD,IACX,QAAC,MAAD;QAAQ,EAAE,EAAEA,MAAM,CAACL,EAAnB;QAAuB,SAAS,EAAET,KAAK,KAAKc,MAAM,CAACL,EAAnD;QAAuD,OAAO,EAAE,MAAM;UAACR,aAAa,CAACa,MAAM,CAACL,EAAR,CAAb;UAA0BL,WAAW,CAAC,KAAD,CAAX;QAAmB,CAApH;QAAA,UAAuHU,MAAM,CAACF;MAA9H;QAAA;QAAA;QAAA;MAAA,QADD;IAPH;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CA/BD;;GAAMd,M;;KAAAA,M;AAiCN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}