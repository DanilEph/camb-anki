{"ast":null,"code":"import _objectSpread from\"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _objectWithoutProperties from\"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";var _excluded=[\"type\",\"css\"];/** @jsxImportSource @emotion/react */import{css}from'@emotion/react';import{jsx as _jsx}from\"@emotion/react/jsx-runtime\";;var styles={'text':css({margin:'10px 0',fontWeight:700,fontSize:'16px'}),'h1':css({fontWeight:700,fontSize:'32px',margin:'0',marginTop:'20px'}),'h2':css({})};var Typography=function Typography(_ref){var _ref$type=_ref.type,type=_ref$type===void 0?'text':_ref$type,css=_ref.css,other=_objectWithoutProperties(_ref,_excluded);var RenderNode;switch(type){case'h1':RenderNode=function RenderNode(props){return _jsx(\"h1\",_objectSpread({},props));};break;case'h2':RenderNode=function RenderNode(props){return _jsx(\"h1\",_objectSpread({},props));};break;default:RenderNode=function RenderNode(props){return _jsx(\"p\",_objectSpread({},props));};break;}return _jsx(RenderNode,_objectSpread({css:[styles[type],css]},other));};export default Typography;","map":{"version":3,"names":["css","styles","margin","fontWeight","fontSize","marginTop","Typography","type","other","RenderNode","props"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Typography/Typography.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { FC } from 'react';\n\ntype TypographyType = 'text' | 'h1' | 'h2';\n\ninterface ITypographyProps extends React.HTMLAttributes<HTMLElement> {\n  type?: TypographyType,\n  css?: {},\n};\n\nconst styles = {\n  'text': css({\n    margin: '10px 0',\n    fontWeight: 700,\n    fontSize: '16px'\n  }),\n  'h1': css({\n    fontWeight: 700,\n    fontSize: '32px',\n    margin: '0',\n    marginTop: '20px',\n  }),\n  'h2': css({\n\n  })\n}\n\nconst Typography: FC<ITypographyProps> = ({ type = 'text', css, ...other }) => {\n  \n  let RenderNode: FC<ITypographyProps>;\n  \n  switch (type) {\n    case 'h1':\n      RenderNode = (props) => <h1 {...props} />\n      break;\n    case 'h2': \n      RenderNode = (props) => <h1 {...props} />\n      break;\n    default:\n      RenderNode = (props) => <p {...props} />\n      break;\n  }\n\n  return (\n    <RenderNode\n      css={[\n        styles[type],\n        css\n      ]} \n      {...other}\n    />\n  )\n};\n\nexport default Typography;"],"mappings":"wWAAA,sCACA,OAASA,GAAT,KAAoB,gBAApB,C,oDAQC,CAED,GAAMC,OAAM,CAAG,CACb,OAAQD,GAAG,CAAC,CACVE,MAAM,CAAE,QADE,CAEVC,UAAU,CAAE,GAFF,CAGVC,QAAQ,CAAE,MAHA,CAAD,CADE,CAMb,KAAMJ,GAAG,CAAC,CACRG,UAAU,CAAE,GADJ,CAERC,QAAQ,CAAE,MAFF,CAGRF,MAAM,CAAE,GAHA,CAIRG,SAAS,CAAE,MAJH,CAAD,CANI,CAYb,KAAML,GAAG,CAAC,EAAD,CAZI,CAAf,CAiBA,GAAMM,WAAgC,CAAG,QAAnCA,WAAmC,MAAsC,oBAAnCC,IAAmC,CAAnCA,IAAmC,oBAA5B,MAA4B,WAApBP,GAAoB,MAApBA,GAAoB,CAAZQ,KAAY,0CAE7E,GAAIC,WAAJ,CAEA,OAAQF,IAAR,EACE,IAAK,IAAL,CACEE,UAAU,CAAG,oBAACC,KAAD,QAAW,4BAAQA,KAAR,EAAX,EAAb,CACA,MACF,IAAK,IAAL,CACED,UAAU,CAAG,oBAACC,KAAD,QAAW,4BAAQA,KAAR,EAAX,EAAb,CACA,MACF,QACED,UAAU,CAAG,oBAACC,KAAD,QAAW,2BAAOA,KAAP,EAAX,EAAb,CACA,MATJ,CAYA,MACE,MAAC,UAAD,gBACE,GAAG,CAAE,CACHT,MAAM,CAACM,IAAD,CADH,CAEHP,GAFG,CADP,EAKMQ,KALN,EADF,CASD,CAzBD,CA2BA,cAAeF,WAAf"},"metadata":{},"sourceType":"module"}