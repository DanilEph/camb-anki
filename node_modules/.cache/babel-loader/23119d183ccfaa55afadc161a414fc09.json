{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Select/Select.tsx\";\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { theme } from 'utils/theme';\nimport { Input } from '../Input';\nimport Option from './Option';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n;\nconst styles = {\n  root: {\n    base: css({\n      position: 'relative'\n    })\n  },\n  menu: {\n    base: css({\n      background: theme.palette.secondary.darker,\n      borderRadius: '12px',\n      fontSize: '14px',\n      marginTop: '10px',\n      boxShadow: '0px 0px 4px 0px rgba(34, 60, 80, 0.2)',\n      position: 'absolute'\n    })\n  }\n};\n\nconst Select = _ref => {\n  let {\n    options,\n    value,\n    onChangeValue = () => {},\n    ...other\n  } = _ref;\n\n  const getNameById = id => {\n    var _options$find;\n\n    return (_options$find = options.find(elem => elem.id === id)) === null || _options$find === void 0 ? void 0 : _options$find.name;\n  };\n\n  return _jsxDEV(\"div\", {\n    css: styles.root.base,\n    ...other,\n    children: [_jsxDEV(Input, {\n      placeholder: \"Card type\",\n      value: getNameById(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: styles.menu.base,\n      children: options.map(option => _jsxDEV(Option, {\n        id: option.id,\n        isChecked: value === option.id,\n        onClick: () => onChangeValue(option.id),\n        children: option.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Select;\nexport default Select;\n\nvar _c;\n\n$RefreshReg$(_c, \"Select\");","map":{"version":3,"names":["css","theme","Input","Option","styles","root","base","position","menu","background","palette","secondary","darker","borderRadius","fontSize","marginTop","boxShadow","Select","options","value","onChangeValue","other","getNameById","id","find","elem","name","map","option"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/UI/Select/Select.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { createContext, FC } from 'react';\nimport { theme } from 'utils/theme';\nimport { Input } from '../Input';\nimport Option from './Option';\n\ninterface OptionType {\n  id: string,\n  name: string,\n}\n\ninterface ISelectProps extends React.HTMLAttributes<HTMLDivElement> {\n  options: OptionType[],\n  value?: string | undefined,\n  onChangeValue?: (newValue: string) => void,\n};\n\nconst styles = {\n  root: {\n    base: css({\n      position: 'relative',\n    })\n  },\n  menu: {\n    base: css({\n      background: theme.palette.secondary.darker,\n      borderRadius: '12px',\n      fontSize: '14px',\n      marginTop: '10px',\n      boxShadow: '0px 0px 4px 0px rgba(34, 60, 80, 0.2)',\n      position: 'absolute',\n    }),\n\n  }\n}\n\nconst Select: FC<ISelectProps> = ({ options, value, onChangeValue = () => {}, ...other }) => {\n\n  const getNameById = (id: string | undefined) => {\n    return options.find((elem) => elem.id === id)?.name;\n  }\n\n  return (\n    <div\n      css={styles.root.base}\n      {...other}\n    >\n      <Input placeholder='Card type' value={getNameById(value)} />\n      <div\n        css={styles.menu.base}\n      >\n        {options.map((option) => (\n          <Option id={option.id} isChecked={value === option.id} onClick={() => onChangeValue(option.id)}>{option.name}</Option>\n        ))}\n      </div>\n    </div>\n  )\n};\n\nexport default Select;"],"mappings":";;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AAEA,SAASC,KAAT,QAAsB,aAAtB;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAWC;AAED,MAAMC,MAAM,GAAG;EACbC,IAAI,EAAE;IACJC,IAAI,EAAEN,GAAG,CAAC;MACRO,QAAQ,EAAE;IADF,CAAD;EADL,CADO;EAMbC,IAAI,EAAE;IACJF,IAAI,EAAEN,GAAG,CAAC;MACRS,UAAU,EAAER,KAAK,CAACS,OAAN,CAAcC,SAAd,CAAwBC,MAD5B;MAERC,YAAY,EAAE,MAFN;MAGRC,QAAQ,EAAE,MAHF;MAIRC,SAAS,EAAE,MAJH;MAKRC,SAAS,EAAE,uCALH;MAMRT,QAAQ,EAAE;IANF,CAAD;EADL;AANO,CAAf;;AAmBA,MAAMU,MAAwB,GAAG,QAA4D;EAAA,IAA3D;IAAEC,OAAF;IAAWC,KAAX;IAAkBC,aAAa,GAAG,MAAM,CAAE,CAA1C;IAA4C,GAAGC;EAA/C,CAA2D;;EAE3F,MAAMC,WAAW,GAAIC,EAAD,IAA4B;IAAA;;IAC9C,wBAAOL,OAAO,CAACM,IAAR,CAAcC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAP,kDAAO,cAAwCG,IAA/C;EACD,CAFD;;EAIA,OACE;IACE,GAAG,EAAEtB,MAAM,CAACC,IAAP,CAAYC,IADnB;IAAA,GAEMe,KAFN;IAAA,WAIE,QAAC,KAAD;MAAO,WAAW,EAAC,WAAnB;MAA+B,KAAK,EAAEC,WAAW,CAACH,KAAD;IAAjD;MAAA;MAAA;MAAA;IAAA,QAJF,EAKE;MACE,GAAG,EAAEf,MAAM,CAACI,IAAP,CAAYF,IADnB;MAAA,UAGGY,OAAO,CAACS,GAAR,CAAaC,MAAD,IACX,QAAC,MAAD;QAAQ,EAAE,EAAEA,MAAM,CAACL,EAAnB;QAAuB,SAAS,EAAEJ,KAAK,KAAKS,MAAM,CAACL,EAAnD;QAAuD,OAAO,EAAE,MAAMH,aAAa,CAACQ,MAAM,CAACL,EAAR,CAAnF;QAAA,UAAiGK,MAAM,CAACF;MAAxG;QAAA;QAAA;QAAA;MAAA,QADD;IAHH;MAAA;MAAA;MAAA;IAAA,QALF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CArBD;;KAAMT,M;AAuBN,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}