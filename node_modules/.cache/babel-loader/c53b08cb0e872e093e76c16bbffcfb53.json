{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Layout } from 'components/Layout';\nimport { Global } from '@emotion/react';\nimport { theme } from 'utils/theme';\nimport { useRecoilState } from 'recoil';\nimport { Tab } from 'components/Tab';\nimport { ALL_TABS } from 'utils/tabs';\nimport { currentTabSelector, CURRENT_TAB } from 'store/currentTab';\nimport { ankiFieldsSelector, ANKI_FIELDS } from 'store/ankiFields';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [headlines, setHeadlines] = useState([]);\n  const [currentTab, setCurrnetTab] = useRecoilState(currentTabSelector);\n  const [ankiFields, setAnkiFields] = useRecoilState(ankiFieldsSelector);\n  useEffect(() => {\n    if (chrome.storage) {\n      chrome.storage.sync.get([CURRENT_TAB, ANKI_FIELDS], res => {\n        // setCurrnetTab(res[CURRENT_TAB]);\n        console.log(JSON.parse(res[ANKI_FIELDS]));\n        setAnkiFields(JSON.parse(res[ANKI_FIELDS]));\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (ankiFields.length === 0) {\n      setAnkiFields([{\n        name: 'Word',\n        value: undefined\n      }, {\n        name: 'Meaning',\n        value: undefined\n      }, {\n        name: 'Example',\n        value: undefined\n      }]);\n    }\n  }); // React.useEffect(() => {\n  //   /**\n  //    * We can't use \"chrome.runtime.sendMessage\" for sending messages from React.\n  //    * For sending messages from React we need to specify which tab to send it to.\n  //    */\n  //   chrome.tabs && chrome.tabs.query({\n  //     active: true,\n  //     currentWindow: true\n  //   }, tabs => {\n  //     /**\n  //      * Sends a single message to the content script(s) in the specified tab,\n  //      * with an optional callback to run when a response is sent back.\n  //      *\n  //      * The runtime.onMessage event is fired in each content script running\n  //      * in the specified tab for the current extension.\n  //      */\n  //     chrome.tabs.sendMessage(\n  //       tabs[0].id || 0,\n  //       { type: 'GET_DOM' } as DOMMessage,\n  //       (response: DOMMessageResponse) => {\n  //         setTitle(response.title);\n  //         setHeadlines(response.headlines);\n  //       });\n  //   });\n  // });\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Global, {\n      styles: {\n        '@font-face': {\n          fontFamily: \"Mako\",\n          src: 'local(\"Mako\"), url(./fonts/Mako/Mako-Regular.ttf) format(\"truetype\")'\n        },\n        '*': {\n          fontFamily: '\"Moka\", sans-serif',\n          boxSizing: 'border-box',\n          color: theme.palette.primary.darkest,\n          fontWeight: 700\n        },\n        'html, body': {\n          width: '400px',\n          margin: 0,\n          padding: 0\n        },\n        '#root': {\n          height: '100%'\n        },\n        '*::-webkit-scrollbar': {\n          width: '7px'\n        },\n        '*::-webkit-scrollbar-track': {\n          borderRadius: '0px',\n          backgroundColor: theme.palette.secondary.darker\n        },\n        '*::-webkit-scrollbar-track:hover': {\n          backgroundColor: theme.palette.secondary.darker\n        },\n        '*::-webkit-scrollbar-track:active': {\n          backgroundColor: theme.palette.secondary.darker\n        },\n        '*::-webkit-scrollbar-thumb': {\n          borderRadius: '20px',\n          backgroundColor: theme.palette.primary.normal\n        },\n        '*::-webkit-scrollbar-thumb:hover': {\n          backgroundColor: theme.palette.primary.darker\n        },\n        '*::-webkit-scrollbar-thumb:active': {\n          backgroundColor: theme.palette.primary.darkest\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), ALL_TABS.map(tab => /*#__PURE__*/_jsxDEV(Tab.Body, {\n      tabId: tab.tabId,\n      currentTab: currentTab,\n      children: tab.page\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"tUoPcbikfPd5Us0vIqfKeq4jFNM=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Layout","Global","theme","useRecoilState","Tab","ALL_TABS","currentTabSelector","CURRENT_TAB","ankiFieldsSelector","ANKI_FIELDS","App","title","setTitle","headlines","setHeadlines","currentTab","setCurrnetTab","ankiFields","setAnkiFields","chrome","storage","sync","get","res","console","log","JSON","parse","length","name","value","undefined","fontFamily","src","boxSizing","color","palette","primary","darkest","fontWeight","width","margin","padding","height","borderRadius","backgroundColor","secondary","darker","normal","map","tab","tabId","page"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/App.tsx"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport { DOMMessage, DOMMessageResponse } from './types';\nimport { Layout } from 'components/Layout';\nimport { Global } from '@emotion/react';\nimport { theme } from 'utils/theme';\nimport { Input } from 'components/UI/Input';\nimport Button from 'components/UI/Button/Button';\nimport Space from 'components/UI/Space/Space';\nimport { WordBlock } from 'components/WordBlock';\nimport { Search } from 'components/Search';\nimport { useRecoilState } from 'recoil';\nimport { searchingWordState } from 'store/searchingWord';\nimport { wordDataState } from 'store/wordData';\nimport { searchErrorState } from 'store/searchError';\nimport Typography from 'components/UI/Typography/Typography';\nimport { Tab } from 'components/Tab';\nimport { ALL_TABS } from 'utils/tabs';\nimport { currentTabSelector, CURRENT_TAB } from 'store/currentTab';\nimport { ankiFieldsSelector, ANKI_FIELDS } from 'store/ankiFields';\n\nfunction App() {\n  const [title, setTitle] = useState('');\n  const [headlines, setHeadlines] = useState<string[]>([]);\n  const [currentTab, setCurrnetTab] = useRecoilState(currentTabSelector);\n  const [ ankiFields, setAnkiFields ] = useRecoilState(ankiFieldsSelector);\n\n  useEffect(() => {\n    if (chrome.storage) {\n      chrome.storage.sync.get([CURRENT_TAB, ANKI_FIELDS], (res) => {\n        // setCurrnetTab(res[CURRENT_TAB]);\n        console.log(JSON.parse(res[ANKI_FIELDS]));\n        setAnkiFields(JSON.parse(res[ANKI_FIELDS]));\n      })\n    }\n  }, [])\n\n  useEffect(() => {\n    if (ankiFields.length === 0) {\n      setAnkiFields([\n        {name: 'Word', value: undefined},\n        {name: 'Meaning', value: undefined},\n        {name: 'Example', value: undefined},\n      ])\n    }\n  })\n\n  // React.useEffect(() => {\n  //   /**\n  //    * We can't use \"chrome.runtime.sendMessage\" for sending messages from React.\n  //    * For sending messages from React we need to specify which tab to send it to.\n  //    */\n  //   chrome.tabs && chrome.tabs.query({\n  //     active: true,\n  //     currentWindow: true\n  //   }, tabs => {\n  //     /**\n  //      * Sends a single message to the content script(s) in the specified tab,\n  //      * with an optional callback to run when a response is sent back.\n  //      *\n  //      * The runtime.onMessage event is fired in each content script running\n  //      * in the specified tab for the current extension.\n  //      */\n  //     chrome.tabs.sendMessage(\n  //       tabs[0].id || 0,\n  //       { type: 'GET_DOM' } as DOMMessage,\n  //       (response: DOMMessageResponse) => {\n  //         setTitle(response.title);\n  //         setHeadlines(response.headlines);\n  //       });\n  //   });\n  // });\n\n  return (\n    <Layout>\n      <Global styles={{\n        '@font-face': {\n          fontFamily: \"Mako\",\n          src: 'local(\"Mako\"), url(./fonts/Mako/Mako-Regular.ttf) format(\"truetype\")',\n        },        \n        '*': {\n          fontFamily: '\"Moka\", sans-serif',\n          boxSizing: 'border-box',\n          color: theme.palette.primary.darkest,\n          fontWeight: 700,\n        },\n        'html, body': {\n          width: '400px',\n          margin: 0,\n          padding: 0,\n        },\n        '#root': {\n          height: '100%',\n        },\n        '*::-webkit-scrollbar': {\n          width: '7px',\n        },\n        '*::-webkit-scrollbar-track': {\n          borderRadius: '0px',\n          backgroundColor: theme.palette.secondary.darker,\n        },\n        '*::-webkit-scrollbar-track:hover': {\n          backgroundColor: theme.palette.secondary.darker,\n        },\n        '*::-webkit-scrollbar-track:active': {\n          backgroundColor: theme.palette.secondary.darker,\n        },\n        '*::-webkit-scrollbar-thumb': {\n          borderRadius: '20px',\n          backgroundColor: theme.palette.primary.normal,\n        },\n        '*::-webkit-scrollbar-thumb:hover': {\n          backgroundColor: theme.palette.primary.darker,\n        },\n        '*::-webkit-scrollbar-thumb:active': {\n          backgroundColor: theme.palette.primary.darkest,\n        }\n      }} />\n      {ALL_TABS.map((tab) => (\n        <Tab.Body tabId={tab.tabId} currentTab={currentTab} >\n          {tab.page}\n        </Tab.Body>\n      ))}\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}