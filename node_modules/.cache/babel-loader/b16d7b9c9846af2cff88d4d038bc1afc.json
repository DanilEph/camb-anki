{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/Definition/Definition.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Typography from 'components/UI/Typography/Typography';\nimport { useContext } from 'react';\nimport { ContextDefinition } from '../DefinitionBlock';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n;\nconst styles = {\n  root: {\n    base: css({\n      fontSize: '16px',\n      margin: '15px 0'\n    })\n  }\n};\n\nconst Definition = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const context = useContext(ContextDefinition);\n  context === null || context === void 0 ? void 0 : context.definition.set(children);\n  return _jsxDEV(Typography, {\n    css: styles.root.base,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Definition, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\n_c = Definition;\nexport default Definition;\n\nvar _c;\n\n$RefreshReg$(_c, \"Definition\");","map":{"version":3,"names":["css","Typography","useContext","ContextDefinition","styles","root","base","fontSize","margin","Definition","children","context","definition","set"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/components/WordBlock/DefititionBlock/Definition/Definition.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Typography from 'components/UI/Typography/Typography';\nimport { FC, useContext } from 'react';\nimport { ContextDefinition } from '../DefinitionBlock';\n\ninterface IDefinitionProps  extends Omit<React.HTMLAttributes<HTMLDivElement>, 'children'> {\n  children: string,\n};\n\nconst styles = {\n  root: {\n    base: css({\n      fontSize: '16px',\n      margin: '15px 0',\n    })\n  },\n}\n\nconst Definition: FC<IDefinitionProps> = ({ children }) => {\n  const context = useContext(ContextDefinition);\n  context?.definition.set(children);\n\n  return (\n    <Typography css={styles.root.base}>\n      {children}\n    </Typography>\n  )\n};\n\nexport default Definition;"],"mappings":";;;AAAA;AACA,SAASA,GAAT,QAAoB,gBAApB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AACA,SAAaC,UAAb,QAA+B,OAA/B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AAIC;AAED,MAAMC,MAAM,GAAG;EACbC,IAAI,EAAE;IACJC,IAAI,EAAEN,GAAG,CAAC;MACRO,QAAQ,EAAE,MADF;MAERC,MAAM,EAAE;IAFA,CAAD;EADL;AADO,CAAf;;AASA,MAAMC,UAAgC,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACzD,MAAMC,OAAO,GAAGT,UAAU,CAACC,iBAAD,CAA1B;EACAQ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEC,UAAT,CAAoBC,GAApB,CAAwBH,QAAxB;EAEA,OACE,QAAC,UAAD;IAAY,GAAG,EAAEN,MAAM,CAACC,IAAP,CAAYC,IAA7B;IAAA,UACGI;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CATD;;GAAMD,U;;KAAAA,U;AAWN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}