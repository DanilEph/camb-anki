{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AddPage/AddPage.tsx\",\n    _s = $RefreshSig$();\n\n/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport Button from 'components/UI/Button/Button';\nimport { Input } from 'components/UI/Input';\nimport { Select } from 'components/UI/Select';\nimport React, { useState } from 'react';\nimport { theme } from 'utils/theme';\nimport { jsxDEV as _jsxDEV } from \"@emotion/react/jsx-dev-runtime\";\n;\nconst styles = {\n  root: {\n    base: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '10px',\n      '& > *': {}\n    })\n  },\n  buttonGroup: {\n    base: css({\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      justifyContent: 'center'\n    })\n  },\n  button: {\n    clean: css({\n      // background: theme.palette.primary.normal\n      flexGrow: 1\n    }),\n    submit: css({\n      background: theme.palette.primary.lightest,\n      flexGrow: 1\n    })\n  }\n};\n\nconst AddPage = () => {\n  _s();\n\n  const [word, setWord] = useState();\n  const [meaning, setMeaning] = useState();\n  const [example, setExample] = useState();\n  const [image, setImage] = useState();\n\n  const handleClean = () => {\n    setWord(undefined);\n    setMeaning(undefined);\n    setExample(undefined);\n    setImage(undefined);\n  };\n\n  const options = [{\n    id: '1',\n    name: 'One'\n  }, {\n    id: '2',\n    name: 'Two'\n  }, {\n    id: '3',\n    name: 'Tree'\n  }];\n  return _jsxDEV(\"div\", {\n    css: styles.root.base,\n    children: [_jsxDEV(Select, {\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), _jsxDEV(Input.TextArea, {\n      sizing: \"large\",\n      placeholder: \"Word\",\n      onContentChange: nodes => {\n        setWord(nodes);\n      },\n      contentValue: word\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), _jsxDEV(Input.TextArea, {\n      sizing: \"large\",\n      placeholder: \"Meaning\",\n      onContentChange: nodes => {\n        setMeaning(nodes);\n      },\n      contentValue: meaning\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), _jsxDEV(Input.TextArea, {\n      sizing: \"large\",\n      placeholder: \"Example\",\n      onContentChange: nodes => {\n        setExample(nodes);\n      },\n      contentValue: example\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), _jsxDEV(Input.TextArea, {\n      sizing: \"large\",\n      placeholder: \"Image\",\n      onContentChange: nodes => {\n        setImage(nodes);\n      },\n      contentValue: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), _jsxDEV(\"div\", {\n      css: styles.buttonGroup.base,\n      children: [_jsxDEV(Button, {\n        css: styles.button.clean,\n        outline: true,\n        onClick: () => handleClean(),\n        children: \"Clean\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), _jsxDEV(Button, {\n        css: styles.button.submit,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPage, \"coE2UyIFkqV3Fom5dPEQQSD/3nE=\");\n\n_c = AddPage;\nexport default AddPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPage\");","map":{"version":3,"names":["css","Button","Input","Select","React","useState","theme","styles","root","base","display","flexDirection","gap","buttonGroup","alignItems","justifyContent","button","clean","flexGrow","submit","background","palette","primary","lightest","AddPage","word","setWord","meaning","setMeaning","example","setExample","image","setImage","handleClean","undefined","options","id","name","nodes"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/pages/AddPage/AddPage.tsx"],"sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { ContentEditable } from 'components/ContentEditable';\nimport Button from 'components/UI/Button/Button';\nimport { Input } from 'components/UI/Input';\nimport { Select } from 'components/UI/Select';\nimport React, { FC, ReactNode, useState } from 'react';\nimport { theme } from 'utils/theme';\n\ninterface IAddPageProps {\n\n};\n\nconst styles = {\n  root: {\n    base: css({\n      display: 'flex',\n      flexDirection: 'column',\n      gap: '10px',\n      '& > *': {\n        \n      }\n    })\n  },\n  buttonGroup: {\n    base: css({\n      display: 'flex',\n      alignItems: 'center',\n      gap: '10px',\n      justifyContent: 'center',\n    })\n  },\n  button: {\n    clean: css({\n      // background: theme.palette.primary.normal\n      flexGrow: 1,\n    }),\n    submit: css({\n      background: theme.palette.primary.lightest,\n      flexGrow: 1,\n    })\n  }\n}\n\nconst AddPage: FC<IAddPageProps> = () => {\n  const [word, setWord] = useState<string[]>();\n  const [meaning, setMeaning] = useState<string[]>();\n  const [example, setExample] = useState<string[]>();\n  const [image, setImage] = useState<string[]>();\n\n  const handleClean = () => {\n    setWord(undefined);\n    setMeaning(undefined);\n    setExample(undefined);\n    setImage(undefined);\n  }\n\n  const options = [\n    {id: '1', name: 'One'},\n    {id: '2', name: 'Two'},\n    {id: '3', name: 'Tree'}\n  ]\n\n  return (\n    <div css={styles.root.base}>\n      <Select options={options} />\n      <Input.TextArea\n        sizing='large'   \n        placeholder='Word'\n        onContentChange={(nodes) => {setWord(nodes)}} \n        contentValue={word}\n      />\n      <Input.TextArea\n        sizing='large'   \n        placeholder='Meaning'\n        onContentChange={(nodes) => {setMeaning(nodes)}} \n        contentValue={meaning}\n      />\n      <Input.TextArea\n        sizing='large'   \n        placeholder='Example'\n        onContentChange={(nodes) => {setExample(nodes)}} \n        contentValue={example}\n      />\n      <Input.TextArea\n        sizing='large'   \n        placeholder='Image'\n        onContentChange={(nodes) => {setImage(nodes)}} \n        contentValue={image}\n      />\n      <div css={styles.buttonGroup.base}>\n        <Button css={styles.button.clean} outline onClick={() => handleClean()} >Clean</Button>\n        <Button css={styles.button.submit}>Submit</Button>\n      </div>\n    </div>\n  )\n};\n\nexport default AddPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}