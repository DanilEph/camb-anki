{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Layout } from 'components/Layout';\nimport { Global } from '@emotion/react';\nimport { theme } from 'utils/theme';\nimport { WordBlock } from 'components/WordBlock';\nimport { Search } from 'components/Search';\nimport { useRecoilState } from 'recoil';\nimport { wordDataState } from 'store/atoms/wordDataState';\nimport { searchErrorState } from 'store/atoms/searchErrorState';\nimport Typography from 'components/UI/Typography/Typography';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [title, setTitle] = React.useState('');\n  const [headlines, setHeadlines] = React.useState([]);\n  const [wordData] = useRecoilState(wordDataState);\n  const [searchError] = useRecoilState(searchErrorState);\n  React.useEffect(() => {\n    /**\n     * We can't use \"chrome.runtime.sendMessage\" for sending messages from React.\n     * For sending messages from React we need to specify which tab to send it to.\n     */\n    chrome.tabs && chrome.tabs.query({\n      active: true,\n      currentWindow: true\n    }, tabs => {\n      /**\n       * Sends a single message to the content script(s) in the specified tab,\n       * with an optional callback to run when a response is sent back.\n       *\n       * The runtime.onMessage event is fired in each content script running\n       * in the specified tab for the current extension.\n       */\n      chrome.tabs.sendMessage(tabs[0].id || 0, {\n        type: 'GET_DOM'\n      }, response => {\n        setTitle(response.title);\n        setHeadlines(response.headlines);\n      });\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Global, {\n      styles: {\n        '@font-face': {\n          fontFamily: \"Mako\",\n          src: 'local(\"Mako\"), url(./fonts/Mako/Mako-Regular.ttf) format(\"truetype\")'\n        },\n        '*': {\n          fontFamily: '\"Moka\", sans-serif',\n          boxSizing: 'border-box',\n          color: theme.palette.primary.darkest,\n          fontWeight: 700\n        },\n        'html, body': {\n          width: '400px',\n          margin: 0,\n          padding: 0\n        },\n        '#root': {\n          height: '100%'\n        },\n        '*::-webkit-scrollbar': {\n          width: '7px'\n        },\n        '*::-webkit-scrollbar-track': {\n          borderRadius: '0px',\n          backgroundColor: theme.palette.secondary.darker\n        },\n        '*::-webkit-scrollbar-track:hover': {\n          backgroundColor: theme.palette.secondary.darker\n        },\n        '*::-webkit-scrollbar-track:active': {\n          backgroundColor: theme.palette.secondary.darker\n        },\n        '*::-webkit-scrollbar-thumb': {\n          borderRadius: '20px',\n          backgroundColor: theme.palette.primary.normal\n        },\n        '*::-webkit-scrollbar-thumb:hover': {\n          backgroundColor: theme.palette.primary.darker\n        },\n        '*::-webkit-scrollbar-thumb:active': {\n          backgroundColor: theme.palette.primary.darkest\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), searchError && /*#__PURE__*/_jsxDEV(Typography, {\n      type: \"h1\",\n      children: 'Oops... Not found :('\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), wordData === null || wordData === void 0 ? void 0 : wordData.map(word => /*#__PURE__*/_jsxDEV(WordBlock, {\n      children: /*#__PURE__*/_jsxDEV(WordBlock.Header, {\n        children: [/*#__PURE__*/_jsxDEV(WordBlock.Header.Word, {\n          partOfSpeech: word.partOfspeech,\n          pronounce: {\n            uk: word.uk,\n            us: word.us\n          },\n          children: word.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), word.useCases.map(useCase => useCase.definition.map(definition => /*#__PURE__*/_jsxDEV(WordBlock.DefinitionBlock, {\n          useCase: useCase.content,\n          level: definition.lvl,\n          children: [/*#__PURE__*/_jsxDEV(WordBlock.DefinitionBlock.Definition, {\n            children: definition.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(WordBlock.DefinitionBlock.Example, {\n            children: definition.examples\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, this)))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Y4MCylD5nZXPjLJofZCbFE55pq0=\", false, function () {\n  return [useRecoilState, useRecoilState];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Layout","Global","theme","WordBlock","Search","useRecoilState","wordDataState","searchErrorState","Typography","App","title","setTitle","useState","headlines","setHeadlines","wordData","searchError","useEffect","chrome","tabs","query","active","currentWindow","sendMessage","id","type","response","fontFamily","src","boxSizing","color","palette","primary","darkest","fontWeight","width","margin","padding","height","borderRadius","backgroundColor","secondary","darker","normal","map","word","partOfspeech","uk","us","useCases","useCase","definition","content","lvl","examples"],"sources":["/Users/macbookpro/Documents/my-repository/web/cambridge-anki/extention/src/App.tsx"],"sourcesContent":["import React, { useEffect, useLayoutEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport { DOMMessage, DOMMessageResponse } from './types';\nimport { Layout } from 'components/Layout';\nimport { Global } from '@emotion/react';\nimport { theme } from 'utils/theme';\nimport { Input } from 'components/UI/Input';\nimport Button from 'components/UI/Button/Button';\nimport Space from 'components/UI/Space/Space';\nimport { WordBlock } from 'components/WordBlock';\nimport { Search } from 'components/Search';\nimport { useRecoilState } from 'recoil';\nimport { searchingWordState } from 'store/atoms/searchingWordState';\nimport { wordDataState } from 'store/atoms/wordDataState';\nimport { searchErrorState } from 'store/atoms/searchErrorState';\nimport Typography from 'components/UI/Typography/Typography';\n\nfunction App() {\n  const [title, setTitle] = React.useState('');\n  const [headlines, setHeadlines] = React.useState<string[]>([]);\n  const [ wordData ] = useRecoilState(wordDataState);\n  const [ searchError ] = useRecoilState(searchErrorState);\n\n  React.useEffect(() => {\n    /**\n     * We can't use \"chrome.runtime.sendMessage\" for sending messages from React.\n     * For sending messages from React we need to specify which tab to send it to.\n     */\n    chrome.tabs && chrome.tabs.query({\n      active: true,\n      currentWindow: true\n    }, tabs => {\n      /**\n       * Sends a single message to the content script(s) in the specified tab,\n       * with an optional callback to run when a response is sent back.\n       *\n       * The runtime.onMessage event is fired in each content script running\n       * in the specified tab for the current extension.\n       */\n      chrome.tabs.sendMessage(\n        tabs[0].id || 0,\n        { type: 'GET_DOM' } as DOMMessage,\n        (response: DOMMessageResponse) => {\n          setTitle(response.title);\n          setHeadlines(response.headlines);\n        });\n    });\n  });\n\n  return (\n    <Layout>\n      <Global styles={{\n        '@font-face': {\n          fontFamily: \"Mako\",\n          src: 'local(\"Mako\"), url(./fonts/Mako/Mako-Regular.ttf) format(\"truetype\")',\n        },        \n        '*': {\n          fontFamily: '\"Moka\", sans-serif',\n          boxSizing: 'border-box',\n          color: theme.palette.primary.darkest,\n          fontWeight: 700,\n        },\n        'html, body': {\n          width: '400px',\n          margin: 0,\n          padding: 0,\n        },\n        '#root': {\n          height: '100%',\n        },\n        '*::-webkit-scrollbar': {\n          width: '7px',\n        },\n        '*::-webkit-scrollbar-track': {\n          borderRadius: '0px',\n          backgroundColor: theme.palette.secondary.darker,\n        },\n        '*::-webkit-scrollbar-track:hover': {\n          backgroundColor: theme.palette.secondary.darker,\n        },\n        '*::-webkit-scrollbar-track:active': {\n          backgroundColor: theme.palette.secondary.darker,\n        },\n        '*::-webkit-scrollbar-thumb': {\n          borderRadius: '20px',\n          backgroundColor: theme.palette.primary.normal,\n        },\n        '*::-webkit-scrollbar-thumb:hover': {\n          backgroundColor: theme.palette.primary.darker,\n        },\n        '*::-webkit-scrollbar-thumb:active': {\n          backgroundColor: theme.palette.primary.darkest,\n        }\n      }} />\n      <Search />\n      {searchError && (\n        <Typography type='h1'>\n          {'Oops... Not found :('}\n        </Typography>\n      )}\n      {wordData?.map((word) => (\n        <WordBlock>\n          <WordBlock.Header>\n            <WordBlock.Header.Word \n              partOfSpeech={word.partOfspeech} \n              pronounce={{uk: word.uk, us: word.us}}\n            >\n              {word.word}\n            </WordBlock.Header.Word>\n            {word.useCases.map((useCase) => (\n              useCase.definition.map((definition) => (\n                <WordBlock.DefinitionBlock\n                  useCase={useCase.content}\n                  level={definition.lvl}\n                >\n                  <WordBlock.DefinitionBlock.Definition>\n                    {definition.content}\n                  </WordBlock.DefinitionBlock.Definition>\n                  <WordBlock.DefinitionBlock.Example>\n                    {definition.examples}\n                  </WordBlock.DefinitionBlock.Example>\n                </WordBlock.DefinitionBlock>\n              ))\n            ))}\n          </WordBlock.Header>\n        </WordBlock>\n      ))}\n    </Layout>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}